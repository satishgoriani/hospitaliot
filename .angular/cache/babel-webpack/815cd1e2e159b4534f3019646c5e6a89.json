{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport API, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { buildSubscriptionGraphQLOperation, getAuthorizationRules, getModelAuthModes, getUserGroupsFromToken, TransformerMutationType, getTokenForCustomAuth } from '../utils';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { validatePredicate } from '../../util';\nvar logger = new Logger('DataStore');\nexport var CONTROL_MSG;\n\n(function (CONTROL_MSG) {\n  CONTROL_MSG[\"CONNECTED\"] = \"CONNECTED\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\n\nexport var USER_CREDENTIALS;\n\n(function (USER_CREDENTIALS) {\n  USER_CREDENTIALS[USER_CREDENTIALS[\"none\"] = 0] = \"none\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"unauth\"] = 1] = \"unauth\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"auth\"] = 2] = \"auth\";\n})(USER_CREDENTIALS || (USER_CREDENTIALS = {}));\n\nvar SubscriptionProcessor =\n/** @class */\nfunction () {\n  function SubscriptionProcessor(schema, syncPredicates, amplifyConfig, authModeStrategy) {\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n\n    this.schema = schema;\n    this.syncPredicates = syncPredicates;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.typeQuery = new WeakMap();\n    this.buffer = [];\n  }\n\n  SubscriptionProcessor.prototype.buildSubscription = function (namespace, model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload, authMode) {\n    var aws_appsync_authenticationType = this.amplifyConfig.aws_appsync_authenticationType;\n\n    var _a = this.getAuthorizationInfo(model, userCredentials, aws_appsync_authenticationType, cognitoTokenPayload, oidcTokenPayload, authMode) || {},\n        isOwner = _a.isOwner,\n        ownerField = _a.ownerField,\n        ownerValue = _a.ownerValue;\n\n    var _b = __read(buildSubscriptionGraphQLOperation(namespace, model, transformerMutationType, isOwner, ownerField), 3),\n        opType = _b[0],\n        opName = _b[1],\n        query = _b[2];\n\n    return {\n      authMode: authMode,\n      opType: opType,\n      opName: opName,\n      query: query,\n      isOwner: isOwner,\n      ownerField: ownerField,\n      ownerValue: ownerValue\n    };\n  };\n\n  SubscriptionProcessor.prototype.getAuthorizationInfo = function (model, userCredentials, defaultAuthType, cognitoTokenPayload, oidcTokenPayload, authMode) {\n    if (cognitoTokenPayload === void 0) {\n      cognitoTokenPayload = {};\n    }\n\n    if (oidcTokenPayload === void 0) {\n      oidcTokenPayload = {};\n    }\n\n    var rules = getAuthorizationRules(model); // Return null if user doesn't have proper credentials for private API with IAM auth\n\n    var iamPrivateAuth = authMode === GRAPHQL_AUTH_MODE.AWS_IAM && rules.find(function (rule) {\n      return rule.authStrategy === 'private' && rule.provider === 'iam';\n    });\n\n    if (iamPrivateAuth && userCredentials === USER_CREDENTIALS.unauth) {\n      return null;\n    } // Group auth should take precedence over owner auth, so we are checking\n    // if rule(s) have group authorization as well as if either the Cognito or\n    // OIDC token has a groupClaim. If so, we are returning auth info before\n    // any further owner-based auth checks.\n\n\n    var groupAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'groups' && ['userPools', 'oidc'].includes(rule.provider);\n    });\n    var validGroup = (authMode === GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS || authMode === GRAPHQL_AUTH_MODE.OPENID_CONNECT) && groupAuthRules.find(function (groupAuthRule) {\n      // validate token against groupClaim\n      var cognitoUserGroups = getUserGroupsFromToken(cognitoTokenPayload, groupAuthRule);\n      var oidcUserGroups = getUserGroupsFromToken(oidcTokenPayload, groupAuthRule);\n      return __spread(cognitoUserGroups, oidcUserGroups).find(function (userGroup) {\n        return groupAuthRule.groups.find(function (group) {\n          return group === userGroup;\n        });\n      });\n    });\n\n    if (validGroup) {\n      return {\n        authMode: authMode,\n        isOwner: false\n      };\n    } // Owner auth needs additional values to be returned in order to create the subscription with\n    // the correct parameters so we are getting the owner value from the Cognito token via the\n    // identityClaim from the auth rule.\n\n\n    var cognitoOwnerAuthRules = authMode === GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS ? rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'userPools';\n    }) : [];\n    var ownerAuthInfo;\n    cognitoOwnerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = cognitoTokenPayload[ownerAuthRule.identityClaim];\n\n      if (ownerValue) {\n        ownerAuthInfo = {\n          authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n          isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n\n    if (ownerAuthInfo) {\n      return ownerAuthInfo;\n    } // Owner auth needs additional values to be returned in order to create the subscription with\n    // the correct parameters so we are getting the owner value from the OIDC token via the\n    // identityClaim from the auth rule.\n\n\n    var oidcOwnerAuthRules = authMode === GRAPHQL_AUTH_MODE.OPENID_CONNECT ? rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'oidc';\n    }) : [];\n    oidcOwnerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = oidcTokenPayload[ownerAuthRule.identityClaim];\n\n      if (ownerValue) {\n        ownerAuthInfo = {\n          authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n          isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n\n    if (ownerAuthInfo) {\n      return ownerAuthInfo;\n    } // Fallback: return authMode or default auth type\n\n\n    return {\n      authMode: authMode || defaultAuthType,\n      isOwner: false\n    };\n  };\n\n  SubscriptionProcessor.prototype.hubQueryCompletionListener = function (completed, capsule) {\n    var event = capsule.payload.event;\n\n    if (event === PUBSUB_CONTROL_MSG.SUBSCRIPTION_ACK) {\n      completed();\n    }\n  };\n\n  SubscriptionProcessor.prototype.start = function () {\n    var _this = this;\n\n    var ctlObservable = new Observable(function (observer) {\n      var promises = []; // Creating subs for each model/operation combo so they can be unsubscribed\n      // independently, since the auth retry behavior is asynchronous.\n\n      var subscriptions = {};\n      var cognitoTokenPayload, oidcTokenPayload;\n      var userCredentials = USER_CREDENTIALS.none;\n\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var credentials, err_1, session, err_2, _a, aws_cognito_region, AuthConfig, token, federatedInfo, currentUser, payload, err_3;\n\n          var _this = this;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                _b.trys.push([0, 2,, 3]);\n\n                return [4\n                /*yield*/\n                , Auth.currentCredentials()];\n\n              case 1:\n                credentials = _b.sent();\n                userCredentials = credentials.authenticated ? USER_CREDENTIALS.auth : USER_CREDENTIALS.unauth;\n                return [3\n                /*break*/\n                , 3];\n\n              case 2:\n                err_1 = _b.sent();\n                return [3\n                /*break*/\n                , 3];\n\n              case 3:\n                _b.trys.push([3, 5,, 6]);\n\n                return [4\n                /*yield*/\n                , Auth.currentSession()];\n\n              case 4:\n                session = _b.sent();\n                cognitoTokenPayload = session.getIdToken().decodePayload();\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                err_2 = _b.sent();\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                _b.trys.push([6, 11,, 12]);\n\n                _a = this.amplifyConfig, aws_cognito_region = _a.aws_cognito_region, AuthConfig = _a.Auth;\n\n                if (!aws_cognito_region || AuthConfig && !AuthConfig.region) {\n                  throw 'Auth is not configured';\n                }\n\n                token = void 0;\n                return [4\n                /*yield*/\n                , Cache.getItem('federatedInfo')];\n\n              case 7:\n                federatedInfo = _b.sent();\n                if (!federatedInfo) return [3\n                /*break*/\n                , 8];\n                token = federatedInfo.token;\n                return [3\n                /*break*/\n                , 10];\n\n              case 8:\n                return [4\n                /*yield*/\n                , Auth.currentAuthenticatedUser()];\n\n              case 9:\n                currentUser = _b.sent();\n\n                if (currentUser) {\n                  token = currentUser.token;\n                }\n\n                _b.label = 10;\n\n              case 10:\n                if (token) {\n                  payload = token.split('.')[1];\n                  oidcTokenPayload = JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n                }\n\n                return [3\n                /*break*/\n                , 12];\n\n              case 11:\n                err_3 = _b.sent();\n                logger.debug('error getting OIDC JWT', err_3);\n                return [3\n                /*break*/\n                , 12];\n\n              case 12:\n                Object.values(this.schema.namespaces).forEach(function (namespace) {\n                  Object.values(namespace.models).filter(function (_a) {\n                    var syncable = _a.syncable;\n                    return syncable;\n                  }).forEach(function (modelDefinition) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var modelAuthModes, readAuthModes, operations, operationAuthModeAttempts, authModeRetry;\n\n                      var _a, _b, _c;\n\n                      var _this = this;\n\n                      return __generator(this, function (_d) {\n                        switch (_d.label) {\n                          case 0:\n                            return [4\n                            /*yield*/\n                            , getModelAuthModes({\n                              authModeStrategy: this.authModeStrategy,\n                              defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n                              modelName: modelDefinition.name,\n                              schema: this.schema\n                            })];\n\n                          case 1:\n                            modelAuthModes = _d.sent();\n                            readAuthModes = modelAuthModes.READ;\n                            subscriptions = __assign(__assign({}, subscriptions), (_a = {}, _a[modelDefinition.name] = (_b = {}, _b[TransformerMutationType.CREATE] = [], _b[TransformerMutationType.UPDATE] = [], _b[TransformerMutationType.DELETE] = [], _b), _a));\n                            operations = [TransformerMutationType.CREATE, TransformerMutationType.UPDATE, TransformerMutationType.DELETE];\n                            operationAuthModeAttempts = (_c = {}, _c[TransformerMutationType.CREATE] = 0, _c[TransformerMutationType.UPDATE] = 0, _c[TransformerMutationType.DELETE] = 0, _c);\n\n                            authModeRetry = function (operation) {\n                              return __awaiter(_this, void 0, void 0, function () {\n                                var _a, transformerMutationType, opName, query, isOwner, ownerField, ownerValue, authMode, authToken, variables, queryObservable, subscriptionReadyCallback;\n\n                                var _this = this;\n\n                                return __generator(this, function (_b) {\n                                  switch (_b.label) {\n                                    case 0:\n                                      _a = this.buildSubscription(namespace, modelDefinition, operation, userCredentials, cognitoTokenPayload, oidcTokenPayload, readAuthModes[operationAuthModeAttempts[operation]]), transformerMutationType = _a.opType, opName = _a.opName, query = _a.query, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue, authMode = _a.authMode;\n                                      return [4\n                                      /*yield*/\n                                      , getTokenForCustomAuth(authMode, this.amplifyConfig)];\n\n                                    case 1:\n                                      authToken = _b.sent();\n                                      variables = {};\n\n                                      if (isOwner) {\n                                        if (!ownerValue) {\n                                          observer.error('Owner field required, sign in is needed in order to perform this operation');\n                                          return [2\n                                          /*return*/\n                                          ];\n                                        }\n\n                                        variables[ownerField] = ownerValue;\n                                      }\n\n                                      logger.debug(\"Attempting \" + operation + \" subscription with authMode: \" + readAuthModes[operationAuthModeAttempts[operation]]);\n                                      queryObservable = API.graphql(__assign(__assign({\n                                        query: query,\n                                        variables: variables\n                                      }, {\n                                        authMode: authMode\n                                      }), {\n                                        authToken: authToken\n                                      }));\n                                      subscriptions[modelDefinition.name][transformerMutationType].push(queryObservable.map(function (_a) {\n                                        var value = _a.value;\n                                        return value;\n                                      }).subscribe({\n                                        next: function (_a) {\n                                          var data = _a.data,\n                                              errors = _a.errors;\n\n                                          if (Array.isArray(errors) && errors.length > 0) {\n                                            var messages = errors.map(function (_a) {\n                                              var message = _a.message;\n                                              return message;\n                                            });\n                                            logger.warn(\"Skipping incoming subscription. Messages: \" + messages.join('\\n'));\n\n                                            _this.drainBuffer();\n\n                                            return;\n                                          }\n\n                                          var predicatesGroup = ModelPredicateCreator.getPredicates(_this.syncPredicates.get(modelDefinition), false);\n                                          var _b = data,\n                                              _c = opName,\n                                              record = _b[_c]; // checking incoming subscription against syncPredicate.\n                                          // once AppSync implements filters on subscriptions, we'll be\n                                          // able to set these when establishing the subscription instead.\n                                          // Until then, we'll need to filter inbound\n\n                                          if (_this.passesPredicateValidation(record, predicatesGroup)) {\n                                            _this.pushToBuffer(transformerMutationType, modelDefinition, record);\n                                          }\n\n                                          _this.drainBuffer();\n                                        },\n                                        error: function (subscriptionError) {\n                                          var _a = subscriptionError.error,\n                                              _b = __read((_a === void 0 ? {\n                                            errors: []\n                                          } : _a).errors, 1),\n                                              _c = _b[0],\n                                              _d = (_c === void 0 ? {} : _c).message,\n                                              message = _d === void 0 ? '' : _d;\n\n                                          if (message.includes(PUBSUB_CONTROL_MSG.REALTIME_SUBSCRIPTION_INIT_ERROR) || message.includes(PUBSUB_CONTROL_MSG.CONNECTION_FAILED)) {\n                                            // Unsubscribe and clear subscription array for model/operation\n                                            subscriptions[modelDefinition.name][transformerMutationType].forEach(function (subscription) {\n                                              return subscription.unsubscribe();\n                                            });\n                                            subscriptions[modelDefinition.name][transformerMutationType] = [];\n                                            operationAuthModeAttempts[operation]++;\n\n                                            if (operationAuthModeAttempts[operation] >= readAuthModes.length) {\n                                              logger.debug(operation + \" subscription failed with authMode: \" + readAuthModes[operationAuthModeAttempts[operation] - 1]);\n                                              logger.warn('subscriptionError', message);\n                                              return;\n                                            } else {\n                                              logger.debug(operation + \" subscription failed with authMode: \" + readAuthModes[operationAuthModeAttempts[operation] - 1] + \". Retrying with authMode: \" + readAuthModes[operationAuthModeAttempts[operation]]);\n                                              authModeRetry(operation);\n                                              return;\n                                            }\n                                          }\n\n                                          logger.warn('subscriptionError', message);\n\n                                          if (typeof subscriptionReadyCallback === 'function') {\n                                            subscriptionReadyCallback();\n                                          }\n\n                                          if (message.includes('\"errorType\":\"Unauthorized\"') || message.includes('\"errorType\":\"OperationDisabled\"')) {\n                                            return;\n                                          }\n\n                                          observer.error(message);\n                                        }\n                                      }));\n                                      promises.push(function () {\n                                        return __awaiter(_this, void 0, void 0, function () {\n                                          var boundFunction;\n\n                                          var _this = this;\n\n                                          return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                              case 0:\n                                                return [4\n                                                /*yield*/\n                                                , new Promise(function (res) {\n                                                  subscriptionReadyCallback = res;\n                                                  boundFunction = _this.hubQueryCompletionListener.bind(_this, res);\n                                                  Hub.listen('api', boundFunction);\n                                                })];\n\n                                              case 1:\n                                                _a.sent();\n\n                                                Hub.remove('api', boundFunction);\n                                                return [2\n                                                /*return*/\n                                                ];\n                                            }\n                                          });\n                                        });\n                                      }());\n                                      return [2\n                                      /*return*/\n                                      ];\n                                  }\n                                });\n                              });\n                            };\n\n                            operations.forEach(function (op) {\n                              return authModeRetry(op);\n                            });\n                            return [2\n                            /*return*/\n                            ];\n                        }\n                      });\n                    });\n                  });\n                });\n                Promise.all(promises).then(function () {\n                  return observer.next(CONTROL_MSG.CONNECTED);\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        Object.keys(subscriptions).forEach(function (modelName) {\n          subscriptions[modelName][TransformerMutationType.CREATE].forEach(function (subscription) {\n            return subscription.unsubscribe();\n          });\n          subscriptions[modelName][TransformerMutationType.UPDATE].forEach(function (subscription) {\n            return subscription.unsubscribe();\n          });\n          subscriptions[modelName][TransformerMutationType.DELETE].forEach(function (subscription) {\n            return subscription.unsubscribe();\n          });\n        });\n      };\n    });\n    var dataObservable = new Observable(function (observer) {\n      _this.dataObserver = observer;\n\n      _this.drainBuffer();\n\n      return function () {\n        _this.dataObserver = null;\n      };\n    });\n    return [ctlObservable, dataObservable];\n  };\n\n  SubscriptionProcessor.prototype.passesPredicateValidation = function (record, predicatesGroup) {\n    if (!predicatesGroup) {\n      return true;\n    }\n\n    var predicates = predicatesGroup.predicates,\n        type = predicatesGroup.type;\n    return validatePredicate(record, type, predicates);\n  };\n\n  SubscriptionProcessor.prototype.pushToBuffer = function (transformerMutationType, modelDefinition, data) {\n    this.buffer.push([transformerMutationType, modelDefinition, data]);\n  };\n\n  SubscriptionProcessor.prototype.drainBuffer = function () {\n    var _this = this;\n\n    if (this.dataObserver) {\n      this.buffer.forEach(function (data) {\n        return _this.dataObserver.next(data);\n      });\n      this.buffer = [];\n    }\n  };\n\n  return SubscriptionProcessor;\n}();\n\nexport { SubscriptionProcessor };","map":{"version":3,"sources":["c:/work/NodeProjects/hospitaliot/node_modules/@aws-amplify/datastore/lib-esm/sync/processors/subscription.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spread","concat","API","GRAPHQL_AUTH_MODE","Auth","Cache","ConsoleLogger","Logger","Hub","CONTROL_MSG","PUBSUB_CONTROL_MSG","Observable","buildSubscriptionGraphQLOperation","getAuthorizationRules","getModelAuthModes","getUserGroupsFromToken","TransformerMutationType","getTokenForCustomAuth","ModelPredicateCreator","validatePredicate","logger","USER_CREDENTIALS","SubscriptionProcessor","schema","syncPredicates","amplifyConfig","authModeStrategy","typeQuery","WeakMap","buffer","buildSubscription","namespace","model","transformerMutationType","userCredentials","cognitoTokenPayload","oidcTokenPayload","authMode","aws_appsync_authenticationType","_a","getAuthorizationInfo","isOwner","ownerField","ownerValue","_b","opType","opName","query","defaultAuthType","rules","iamPrivateAuth","AWS_IAM","find","rule","authStrategy","provider","unauth","groupAuthRules","filter","includes","validGroup","AMAZON_COGNITO_USER_POOLS","OPENID_CONNECT","groupAuthRule","cognitoUserGroups","oidcUserGroups","userGroup","groups","group","cognitoOwnerAuthRules","ownerAuthInfo","forEach","ownerAuthRule","identityClaim","areSubscriptionsPublic","oidcOwnerAuthRules","hubQueryCompletionListener","completed","capsule","event","payload","SUBSCRIPTION_ACK","start","_this","ctlObservable","observer","promises","subscriptions","none","credentials","err_1","session","err_2","aws_cognito_region","AuthConfig","token","federatedInfo","currentUser","err_3","currentCredentials","authenticated","auth","currentSession","getIdToken","decodePayload","region","getItem","currentAuthenticatedUser","split","JSON","parse","Buffer","from","toString","debug","values","namespaces","models","syncable","modelDefinition","modelAuthModes","readAuthModes","operations","operationAuthModeAttempts","authModeRetry","_c","_d","defaultAuthMode","modelName","name","READ","CREATE","UPDATE","DELETE","operation","authToken","variables","queryObservable","subscriptionReadyCallback","graphql","map","subscribe","data","errors","Array","isArray","messages","message","warn","join","drainBuffer","predicatesGroup","getPredicates","get","record","passesPredicateValidation","pushToBuffer","subscriptionError","REALTIME_SUBSCRIPTION_INIT_ERROR","CONNECTION_FAILED","subscription","unsubscribe","boundFunction","res","bind","listen","remove","all","CONNECTED","keys","dataObservable","dataObserver","predicates","type"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACL,KAAV,CAAgBE,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,IAAIM,WAAW,GAAI,QAAQ,KAAKA,WAAd,IAA8B,UAAUjB,OAAV,EAAmBkB,IAAnB,EAAyB;AACrE,MAAIC,CAAC,GAAG;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE,YAAW;AAAE,UAAIjC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAX,EAAc,MAAMA,CAAC,CAAC,CAAD,CAAP;AAAY,aAAOA,CAAC,CAAC,CAAD,CAAR;AAAc,KAAvE;AAAyEkC,IAAAA,IAAI,EAAE,EAA/E;AAAmFC,IAAAA,GAAG,EAAE;AAAxF,GAAR;AAAA,MAAsGC,CAAtG;AAAA,MAAyGC,CAAzG;AAAA,MAA4GrC,CAA5G;AAAA,MAA+GsC,CAA/G;AACA,SAAOA,CAAC,GAAG;AAAEf,IAAAA,IAAI,EAAEgB,IAAI,CAAC,CAAD,CAAZ;AAAiB,aAASA,IAAI,CAAC,CAAD,CAA9B;AAAmC,cAAUA,IAAI,CAAC,CAAD;AAAjD,GAAJ,EAA4D,OAAOC,MAAP,KAAkB,UAAlB,KAAiCF,CAAC,CAACE,MAAM,CAACC,QAAR,CAAD,GAAqB,YAAW;AAAE,WAAO,IAAP;AAAc,GAAjF,CAA5D,EAAgJH,CAAvJ;;AACA,WAASC,IAAT,CAAcpC,CAAd,EAAiB;AAAE,WAAO,UAAUuC,CAAV,EAAa;AAAE,aAAOpB,IAAI,CAAC,CAACnB,CAAD,EAAIuC,CAAJ,CAAD,CAAX;AAAsB,KAA5C;AAA+C;;AAClE,WAASpB,IAAT,CAAcqB,EAAd,EAAkB;AACd,QAAIP,CAAJ,EAAO,MAAM,IAAIQ,SAAJ,CAAc,iCAAd,CAAN;;AACP,WAAOb,CAAP,EAAU,IAAI;AACV,UAAIK,CAAC,GAAG,CAAJ,EAAOC,CAAC,KAAKrC,CAAC,GAAG2C,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR,GAAYN,CAAC,CAAC,QAAD,CAAb,GAA0BM,EAAE,CAAC,CAAD,CAAF,GAAQN,CAAC,CAAC,OAAD,CAAD,KAAe,CAACrC,CAAC,GAAGqC,CAAC,CAAC,QAAD,CAAN,KAAqBrC,CAAC,CAACS,IAAF,CAAO4B,CAAP,CAArB,EAAgC,CAA/C,CAAR,GAA4DA,CAAC,CAACd,IAAjG,CAAD,IAA2G,CAAC,CAACvB,CAAC,GAAGA,CAAC,CAACS,IAAF,CAAO4B,CAAP,EAAUM,EAAE,CAAC,CAAD,CAAZ,CAAL,EAAuBhB,IAA9I,EAAoJ,OAAO3B,CAAP;AACpJ,UAAIqC,CAAC,GAAG,CAAJ,EAAOrC,CAAX,EAAc2C,EAAE,GAAG,CAACA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAT,EAAY3C,CAAC,CAACiB,KAAd,CAAL;;AACd,cAAQ0B,EAAE,CAAC,CAAD,CAAV;AACI,aAAK,CAAL;AAAQ,aAAK,CAAL;AAAQ3C,UAAAA,CAAC,GAAG2C,EAAJ;AAAQ;;AACxB,aAAK,CAAL;AAAQZ,UAAAA,CAAC,CAACC,KAAF;AAAW,iBAAO;AAAEf,YAAAA,KAAK,EAAE0B,EAAE,CAAC,CAAD,CAAX;AAAgBhB,YAAAA,IAAI,EAAE;AAAtB,WAAP;;AACnB,aAAK,CAAL;AAAQI,UAAAA,CAAC,CAACC,KAAF;AAAWK,UAAAA,CAAC,GAAGM,EAAE,CAAC,CAAD,CAAN;AAAWA,UAAAA,EAAE,GAAG,CAAC,CAAD,CAAL;AAAU;;AACxC,aAAK,CAAL;AAAQA,UAAAA,EAAE,GAAGZ,CAAC,CAACI,GAAF,CAAMU,GAAN,EAAL;;AAAkBd,UAAAA,CAAC,CAACG,IAAF,CAAOW,GAAP;;AAAc;;AACxC;AACI,cAAI,EAAE7C,CAAC,GAAG+B,CAAC,CAACG,IAAN,EAAYlC,CAAC,GAAGA,CAAC,CAACK,MAAF,GAAW,CAAX,IAAgBL,CAAC,CAACA,CAAC,CAACK,MAAF,GAAW,CAAZ,CAAnC,MAAuDsC,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAeA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAhF,CAAJ,EAAwF;AAAEZ,YAAAA,CAAC,GAAG,CAAJ;AAAO;AAAW;;AAC5G,cAAIY,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,KAAgB,CAAC3C,CAAD,IAAO2C,EAAE,CAAC,CAAD,CAAF,GAAQ3C,CAAC,CAAC,CAAD,CAAT,IAAgB2C,EAAE,CAAC,CAAD,CAAF,GAAQ3C,CAAC,CAAC,CAAD,CAAhD,CAAJ,EAA2D;AAAE+B,YAAAA,CAAC,CAACC,KAAF,GAAUW,EAAE,CAAC,CAAD,CAAZ;AAAiB;AAAQ;;AACtF,cAAIA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAeZ,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAA9B,EAAmC;AAAE+B,YAAAA,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAAX;AAAgBA,YAAAA,CAAC,GAAG2C,EAAJ;AAAQ;AAAQ;;AACrE,cAAI3C,CAAC,IAAI+B,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAApB,EAAyB;AAAE+B,YAAAA,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAAX;;AAAgB+B,YAAAA,CAAC,CAACI,GAAF,CAAMW,IAAN,CAAWH,EAAX;;AAAgB;AAAQ;;AACnE,cAAI3C,CAAC,CAAC,CAAD,CAAL,EAAU+B,CAAC,CAACI,GAAF,CAAMU,GAAN;;AACVd,UAAAA,CAAC,CAACG,IAAF,CAAOW,GAAP;;AAAc;AAXtB;;AAaAF,MAAAA,EAAE,GAAGb,IAAI,CAACrB,IAAL,CAAUG,OAAV,EAAmBmB,CAAnB,CAAL;AACH,KAjBS,CAiBR,OAAOP,CAAP,EAAU;AAAEmB,MAAAA,EAAE,GAAG,CAAC,CAAD,EAAInB,CAAJ,CAAL;AAAaa,MAAAA,CAAC,GAAG,CAAJ;AAAQ,KAjBzB,SAiBkC;AAAED,MAAAA,CAAC,GAAGpC,CAAC,GAAG,CAAR;AAAY;;AAC1D,QAAI2C,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAZ,EAAe,MAAMA,EAAE,CAAC,CAAD,CAAR;AAAa,WAAO;AAAE1B,MAAAA,KAAK,EAAE0B,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAAV,GAAgB,KAAK,CAA9B;AAAiChB,MAAAA,IAAI,EAAE;AAAvC,KAAP;AAC/B;AACJ,CA1BD;;AA2BA,IAAIoB,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAa7C,CAAb,EAAgB;AAClD,MAAI8C,CAAC,GAAG,OAAOT,MAAP,KAAkB,UAAlB,IAAgCQ,CAAC,CAACR,MAAM,CAACC,QAAR,CAAzC;AACA,MAAI,CAACQ,CAAL,EAAQ,OAAOD,CAAP;AACR,MAAI9C,CAAC,GAAG+C,CAAC,CAACxC,IAAF,CAAOuC,CAAP,CAAR;AAAA,MAAmBE,CAAnB;AAAA,MAAsBC,EAAE,GAAG,EAA3B;AAAA,MAA+B3B,CAA/B;;AACA,MAAI;AACA,WAAO,CAACrB,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAAC+C,CAAC,GAAGhD,CAAC,CAACqB,IAAF,EAAL,EAAeI,IAApD,EAA0DwB,EAAE,CAACL,IAAH,CAAQI,CAAC,CAACjC,KAAV;AAC7D,GAFD,CAGA,OAAOmC,KAAP,EAAc;AAAE5B,IAAAA,CAAC,GAAG;AAAE4B,MAAAA,KAAK,EAAEA;AAAT,KAAJ;AAAuB,GAHvC,SAIQ;AACJ,QAAI;AACA,UAAIF,CAAC,IAAI,CAACA,CAAC,CAACvB,IAAR,KAAiBsB,CAAC,GAAG/C,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuC+C,CAAC,CAACxC,IAAF,CAAOP,CAAP;AAC1C,KAFD,SAGQ;AAAE,UAAIsB,CAAJ,EAAO,MAAMA,CAAC,CAAC4B,KAAR;AAAgB;AACpC;;AACD,SAAOD,EAAP;AACH,CAfD;;AAgBA,IAAIE,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClD,OAAK,IAAIF,EAAE,GAAG,EAAT,EAAajD,CAAC,GAAG,CAAtB,EAAyBA,CAAC,GAAGE,SAAS,CAACC,MAAvC,EAA+CH,CAAC,EAAhD,EAAoDiD,EAAE,GAAGA,EAAE,CAACG,MAAH,CAAUP,MAAM,CAAC3C,SAAS,CAACF,CAAD,CAAV,CAAhB,CAAL;;AACpD,SAAOiD,EAAP;AACH,CAHD;;AAIA,OAAOI,GAAP,IAAcC,iBAAd,QAAuC,kBAAvC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,GAAlC,QAA6C,mBAA7C;AACA,SAASC,WAAW,IAAIC,kBAAxB,QAAkD,qBAAlD;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,iCAAT,EAA4CC,qBAA5C,EAAmEC,iBAAnE,EAAsFC,sBAAtF,EAA8GC,uBAA9G,EAAuIC,qBAAvI,QAAqK,UAArK;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,IAAIC,MAAM,GAAG,IAAIb,MAAJ,CAAW,WAAX,CAAb;AACA,OAAO,IAAIE,WAAJ;;AACP,CAAC,UAAUA,WAAV,EAAuB;AACpBA,EAAAA,WAAW,CAAC,WAAD,CAAX,GAA2B,WAA3B;AACH,CAFD,EAEGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAFd;;AAGA,OAAO,IAAIY,gBAAJ;;AACP,CAAC,UAAUA,gBAAV,EAA4B;AACzBA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,MAAD,CAAhB,GAA2B,CAA5B,CAAhB,GAAiD,MAAjD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,QAAD,CAAhB,GAA6B,CAA9B,CAAhB,GAAmD,QAAnD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,MAAD,CAAhB,GAA2B,CAA5B,CAAhB,GAAiD,MAAjD;AACH,CAJD,EAIGA,gBAAgB,KAAKA,gBAAgB,GAAG,EAAxB,CAJnB;;AAKA,IAAIC,qBAAqB;AAAG;AAAe,YAAY;AACnD,WAASA,qBAAT,CAA+BC,MAA/B,EAAuCC,cAAvC,EAAuDC,aAAvD,EAAsEC,gBAAtE,EAAwF;AACpF,QAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,MAAAA,aAAa,GAAG,EAAhB;AAAqB;;AACrD,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,SAAL,GAAiB,IAAIC,OAAJ,EAAjB;AACA,SAAKC,MAAL,GAAc,EAAd;AACH;;AACDP,EAAAA,qBAAqB,CAACpE,SAAtB,CAAgC4E,iBAAhC,GAAoD,UAAUC,SAAV,EAAqBC,KAArB,EAA4BC,uBAA5B,EAAqDC,eAArD,EAAsEC,mBAAtE,EAA2FC,gBAA3F,EAA6GC,QAA7G,EAAuH;AACvK,QAAIC,8BAA8B,GAAG,KAAKb,aAAL,CAAmBa,8BAAxD;;AACA,QAAIC,EAAE,GAAG,KAAKC,oBAAL,CAA0BR,KAA1B,EAAiCE,eAAjC,EAAkDI,8BAAlD,EAAkFH,mBAAlF,EAAuGC,gBAAvG,EAAyHC,QAAzH,KAAsI,EAA/I;AAAA,QAAmJI,OAAO,GAAGF,EAAE,CAACE,OAAhK;AAAA,QAAyKC,UAAU,GAAGH,EAAE,CAACG,UAAzL;AAAA,QAAqMC,UAAU,GAAGJ,EAAE,CAACI,UAArN;;AACA,QAAIC,EAAE,GAAGlD,MAAM,CAACkB,iCAAiC,CAACmB,SAAD,EAAYC,KAAZ,EAAmBC,uBAAnB,EAA4CQ,OAA5C,EAAqDC,UAArD,CAAlC,EAAoG,CAApG,CAAf;AAAA,QAAuHG,MAAM,GAAGD,EAAE,CAAC,CAAD,CAAlI;AAAA,QAAuIE,MAAM,GAAGF,EAAE,CAAC,CAAD,CAAlJ;AAAA,QAAuJG,KAAK,GAAGH,EAAE,CAAC,CAAD,CAAjK;;AACA,WAAO;AAAEP,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBQ,MAAAA,MAAM,EAAEA,MAA9B;AAAsCC,MAAAA,MAAM,EAAEA,MAA9C;AAAsDC,MAAAA,KAAK,EAAEA,KAA7D;AAAoEN,MAAAA,OAAO,EAAEA,OAA7E;AAAsFC,MAAAA,UAAU,EAAEA,UAAlG;AAA8GC,MAAAA,UAAU,EAAEA;AAA1H,KAAP;AACH,GALD;;AAMArB,EAAAA,qBAAqB,CAACpE,SAAtB,CAAgCsF,oBAAhC,GAAuD,UAAUR,KAAV,EAAiBE,eAAjB,EAAkCc,eAAlC,EAAmDb,mBAAnD,EAAwEC,gBAAxE,EAA0FC,QAA1F,EAAoG;AACvJ,QAAIF,mBAAmB,KAAK,KAAK,CAAjC,EAAoC;AAAEA,MAAAA,mBAAmB,GAAG,EAAtB;AAA2B;;AACjE,QAAIC,gBAAgB,KAAK,KAAK,CAA9B,EAAiC;AAAEA,MAAAA,gBAAgB,GAAG,EAAnB;AAAwB;;AAC3D,QAAIa,KAAK,GAAGpC,qBAAqB,CAACmB,KAAD,CAAjC,CAHuJ,CAIvJ;;AACA,QAAIkB,cAAc,GAAGb,QAAQ,KAAKlC,iBAAiB,CAACgD,OAA/B,IACjBF,KAAK,CAACG,IAAN,CAAW,UAAUC,IAAV,EAAgB;AAAE,aAAOA,IAAI,CAACC,YAAL,KAAsB,SAAtB,IAAmCD,IAAI,CAACE,QAAL,KAAkB,KAA5D;AAAoE,KAAjG,CADJ;;AAEA,QAAIL,cAAc,IAAIhB,eAAe,KAAKb,gBAAgB,CAACmC,MAA3D,EAAmE;AAC/D,aAAO,IAAP;AACH,KATsJ,CAUvJ;AACA;AACA;AACA;;;AACA,QAAIC,cAAc,GAAGR,KAAK,CAACS,MAAN,CAAa,UAAUL,IAAV,EAAgB;AAC9C,aAAOA,IAAI,CAACC,YAAL,KAAsB,QAAtB,IACH,CAAC,WAAD,EAAc,MAAd,EAAsBK,QAAtB,CAA+BN,IAAI,CAACE,QAApC,CADJ;AAEH,KAHoB,CAArB;AAIA,QAAIK,UAAU,GAAG,CAACvB,QAAQ,KAAKlC,iBAAiB,CAAC0D,yBAA/B,IACdxB,QAAQ,KAAKlC,iBAAiB,CAAC2D,cADlB,KAEbL,cAAc,CAACL,IAAf,CAAoB,UAAUW,aAAV,EAAyB;AACzC;AACA,UAAIC,iBAAiB,GAAGjD,sBAAsB,CAACoB,mBAAD,EAAsB4B,aAAtB,CAA9C;AACA,UAAIE,cAAc,GAAGlD,sBAAsB,CAACqB,gBAAD,EAAmB2B,aAAnB,CAA3C;AACA,aAAO/D,QAAQ,CAACgE,iBAAD,EAAoBC,cAApB,CAAR,CAA4Cb,IAA5C,CAAiD,UAAUc,SAAV,EAAqB;AACzE,eAAOH,aAAa,CAACI,MAAd,CAAqBf,IAArB,CAA0B,UAAUgB,KAAV,EAAiB;AAAE,iBAAOA,KAAK,KAAKF,SAAjB;AAA6B,SAA1E,CAAP;AACH,OAFM,CAAP;AAGH,KAPD,CAFJ;;AAUA,QAAIN,UAAJ,EAAgB;AACZ,aAAO;AACHvB,QAAAA,QAAQ,EAAEA,QADP;AAEHI,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIH,KAjCsJ,CAkCvJ;AACA;AACA;;;AACA,QAAI4B,qBAAqB,GAAGhC,QAAQ,KAAKlC,iBAAiB,CAAC0D,yBAA/B,GACtBZ,KAAK,CAACS,MAAN,CAAa,UAAUL,IAAV,EAAgB;AAC3B,aAAOA,IAAI,CAACC,YAAL,KAAsB,OAAtB,IAAiCD,IAAI,CAACE,QAAL,KAAkB,WAA1D;AACH,KAFC,CADsB,GAItB,EAJN;AAKA,QAAIe,aAAJ;AACAD,IAAAA,qBAAqB,CAACE,OAAtB,CAA8B,UAAUC,aAAV,EAAyB;AACnD,UAAI7B,UAAU,GAAGR,mBAAmB,CAACqC,aAAa,CAACC,aAAf,CAApC;;AACA,UAAI9B,UAAJ,EAAgB;AACZ2B,QAAAA,aAAa,GAAG;AACZjC,UAAAA,QAAQ,EAAElC,iBAAiB,CAAC0D,yBADhB;AAEZpB,UAAAA,OAAO,EAAE+B,aAAa,CAACE,sBAAd,GAAuC,KAAvC,GAA+C,IAF5C;AAGZhC,UAAAA,UAAU,EAAE8B,aAAa,CAAC9B,UAHd;AAIZC,UAAAA,UAAU,EAAEA;AAJA,SAAhB;AAMH;AACJ,KAVD;;AAWA,QAAI2B,aAAJ,EAAmB;AACf,aAAOA,aAAP;AACH,KAxDsJ,CAyDvJ;AACA;AACA;;;AACA,QAAIK,kBAAkB,GAAGtC,QAAQ,KAAKlC,iBAAiB,CAAC2D,cAA/B,GACnBb,KAAK,CAACS,MAAN,CAAa,UAAUL,IAAV,EAAgB;AAAE,aAAOA,IAAI,CAACC,YAAL,KAAsB,OAAtB,IAAiCD,IAAI,CAACE,QAAL,KAAkB,MAA1D;AAAmE,KAAlG,CADmB,GAEnB,EAFN;AAGAoB,IAAAA,kBAAkB,CAACJ,OAAnB,CAA2B,UAAUC,aAAV,EAAyB;AAChD,UAAI7B,UAAU,GAAGP,gBAAgB,CAACoC,aAAa,CAACC,aAAf,CAAjC;;AACA,UAAI9B,UAAJ,EAAgB;AACZ2B,QAAAA,aAAa,GAAG;AACZjC,UAAAA,QAAQ,EAAElC,iBAAiB,CAAC2D,cADhB;AAEZrB,UAAAA,OAAO,EAAE+B,aAAa,CAACE,sBAAd,GAAuC,KAAvC,GAA+C,IAF5C;AAGZhC,UAAAA,UAAU,EAAE8B,aAAa,CAAC9B,UAHd;AAIZC,UAAAA,UAAU,EAAEA;AAJA,SAAhB;AAMH;AACJ,KAVD;;AAWA,QAAI2B,aAAJ,EAAmB;AACf,aAAOA,aAAP;AACH,KA5EsJ,CA6EvJ;;;AACA,WAAO;AACHjC,MAAAA,QAAQ,EAAEA,QAAQ,IAAIW,eADnB;AAEHP,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH,GAlFD;;AAmFAnB,EAAAA,qBAAqB,CAACpE,SAAtB,CAAgC0H,0BAAhC,GAA6D,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;AACvF,QAAIC,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBD,KAA5B;;AACA,QAAIA,KAAK,KAAKrE,kBAAkB,CAACuE,gBAAjC,EAAmD;AAC/CJ,MAAAA,SAAS;AACZ;AACJ,GALD;;AAMAvD,EAAAA,qBAAqB,CAACpE,SAAtB,CAAgCgI,KAAhC,GAAwC,YAAY;AAChD,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,aAAa,GAAG,IAAIzE,UAAJ,CAAe,UAAU0E,QAAV,EAAoB;AACnD,UAAIC,QAAQ,GAAG,EAAf,CADmD,CAEnD;AACA;;AACA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIpD,mBAAJ,EAAyBC,gBAAzB;AACA,UAAIF,eAAe,GAAGb,gBAAgB,CAACmE,IAAvC;;AACA,OAAC,YAAY;AAAE,eAAOlI,SAAS,CAAC6H,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AAC/D,cAAIM,WAAJ,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCrD,EAAxC,EAA4CsD,kBAA5C,EAAgEC,UAAhE,EAA4EC,KAA5E,EAAmFC,aAAnF,EAAkGC,WAAlG,EAA+GjB,OAA/G,EAAwHkB,KAAxH;;AACA,cAAIf,KAAK,GAAG,IAAZ;;AACA,iBAAO3G,WAAW,CAAC,IAAD,EAAO,UAAUoE,EAAV,EAAc;AACnC,oBAAQA,EAAE,CAACjE,KAAX;AACI,mBAAK,CAAL;AACIiE,gBAAAA,EAAE,CAAC/D,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAcW,IAAI,CAAC+F,kBAAL,EAAd,CAAP;;AACJ,mBAAK,CAAL;AACIV,gBAAAA,WAAW,GAAG7C,EAAE,CAAChE,IAAH,EAAd;AACAsD,gBAAAA,eAAe,GAAGuD,WAAW,CAACW,aAAZ,GACZ/E,gBAAgB,CAACgF,IADL,GAEZhF,gBAAgB,CAACmC,MAFvB;AAGA,uBAAO,CAAC;AAAE;AAAH,kBAAc,CAAd,CAAP;;AACJ,mBAAK,CAAL;AACIkC,gBAAAA,KAAK,GAAG9C,EAAE,CAAChE,IAAH,EAAR;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAc,CAAd,CAAP;;AACJ,mBAAK,CAAL;AACIgE,gBAAAA,EAAE,CAAC/D,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAcW,IAAI,CAACkG,cAAL,EAAd,CAAP;;AACJ,mBAAK,CAAL;AACIX,gBAAAA,OAAO,GAAG/C,EAAE,CAAChE,IAAH,EAAV;AACAuD,gBAAAA,mBAAmB,GAAGwD,OAAO,CAACY,UAAR,GAAqBC,aAArB,EAAtB;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAc,CAAd,CAAP;;AACJ,mBAAK,CAAL;AACIZ,gBAAAA,KAAK,GAAGhD,EAAE,CAAChE,IAAH,EAAR;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAc,CAAd,CAAP;;AACJ,mBAAK,CAAL;AACIgE,gBAAAA,EAAE,CAAC/D,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,EAAJ,GAAU,EAAV,CAAb;;AACA8C,gBAAAA,EAAE,GAAG,KAAKd,aAAV,EAAyBoE,kBAAkB,GAAGtD,EAAE,CAACsD,kBAAjD,EAAqEC,UAAU,GAAGvD,EAAE,CAACnC,IAArF;;AACA,oBAAI,CAACyF,kBAAD,IAAwBC,UAAU,IAAI,CAACA,UAAU,CAACW,MAAtD,EAA+D;AAC3D,wBAAM,wBAAN;AACH;;AACDV,gBAAAA,KAAK,GAAG,KAAK,CAAb;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAc1F,KAAK,CAACqG,OAAN,CAAc,eAAd,CAAd,CAAP;;AACJ,mBAAK,CAAL;AACIV,gBAAAA,aAAa,GAAGpD,EAAE,CAAChE,IAAH,EAAhB;AACA,oBAAI,CAACoH,aAAL,EAAoB,OAAO,CAAC;AAAE;AAAH,kBAAc,CAAd,CAAP;AACpBD,gBAAAA,KAAK,GAAGC,aAAa,CAACD,KAAtB;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAc,EAAd,CAAP;;AACJ,mBAAK,CAAL;AAAQ,uBAAO,CAAC;AAAE;AAAH,kBAAc3F,IAAI,CAACuG,wBAAL,EAAd,CAAP;;AACR,mBAAK,CAAL;AACIV,gBAAAA,WAAW,GAAGrD,EAAE,CAAChE,IAAH,EAAd;;AACA,oBAAIqH,WAAJ,EAAiB;AACbF,kBAAAA,KAAK,GAAGE,WAAW,CAACF,KAApB;AACH;;AACDnD,gBAAAA,EAAE,CAACjE,KAAH,GAAW,EAAX;;AACJ,mBAAK,EAAL;AACI,oBAAIoH,KAAJ,EAAW;AACPf,kBAAAA,OAAO,GAAGe,KAAK,CAACa,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAV;AACAxE,kBAAAA,gBAAgB,GAAGyE,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYhC,OAAZ,EAAqB,QAArB,EAA+BiC,QAA/B,CAAwC,MAAxC,CAAX,CAAnB;AACH;;AACD,uBAAO,CAAC;AAAE;AAAH,kBAAc,EAAd,CAAP;;AACJ,mBAAK,EAAL;AACIf,gBAAAA,KAAK,GAAGtD,EAAE,CAAChE,IAAH,EAAR;AACAwC,gBAAAA,MAAM,CAAC8F,KAAP,CAAa,wBAAb,EAAuChB,KAAvC;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAc,EAAd,CAAP;;AACJ,mBAAK,EAAL;AACIzJ,gBAAAA,MAAM,CAAC0K,MAAP,CAAc,KAAK5F,MAAL,CAAY6F,UAA1B,EAAsC7C,OAAtC,CAA8C,UAAUxC,SAAV,EAAqB;AAC/DtF,kBAAAA,MAAM,CAAC0K,MAAP,CAAcpF,SAAS,CAACsF,MAAxB,EACK3D,MADL,CACY,UAAUnB,EAAV,EAAc;AACtB,wBAAI+E,QAAQ,GAAG/E,EAAE,CAAC+E,QAAlB;AACA,2BAAOA,QAAP;AACH,mBAJD,EAKK/C,OALL,CAKa,UAAUgD,eAAV,EAA2B;AAAE,2BAAOjK,SAAS,CAAC6H,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AAC1F,0BAAIqC,cAAJ,EAAoBC,aAApB,EAAmCC,UAAnC,EAA+CC,yBAA/C,EAA0EC,aAA1E;;AACA,0BAAIrF,EAAJ,EAAQK,EAAR,EAAYiF,EAAZ;;AACA,0BAAI1C,KAAK,GAAG,IAAZ;;AACA,6BAAO3G,WAAW,CAAC,IAAD,EAAO,UAAUsJ,EAAV,EAAc;AACnC,gCAAQA,EAAE,CAACnJ,KAAX;AACI,+BAAK,CAAL;AAAQ,mCAAO,CAAC;AAAE;AAAH,8BAAcmC,iBAAiB,CAAC;AACvCY,8BAAAA,gBAAgB,EAAE,KAAKA,gBADgB;AAEvCqG,8BAAAA,eAAe,EAAE,KAAKtG,aAAL,CACZa,8BAHkC;AAIvC0F,8BAAAA,SAAS,EAAET,eAAe,CAACU,IAJY;AAKvC1G,8BAAAA,MAAM,EAAE,KAAKA;AAL0B,6BAAD,CAA/B,CAAP;;AAOR,+BAAK,CAAL;AACIiG,4BAAAA,cAAc,GAAGM,EAAE,CAAClJ,IAAH,EAAjB;AACA6I,4BAAAA,aAAa,GAAGD,cAAc,CAACU,IAA/B;AACA3C,4BAAAA,aAAa,GAAG/I,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK+I,aAAL,CAAT,GAA+BhD,EAAE,GAAG,EAAL,EAASA,EAAE,CAACgF,eAAe,CAACU,IAAjB,CAAF,IAA4BrF,EAAE,GAAG,EAAL,EACxFA,EAAE,CAAC5B,uBAAuB,CAACmH,MAAzB,CAAF,GAAqC,EADmD,EAExFvF,EAAE,CAAC5B,uBAAuB,CAACoH,MAAzB,CAAF,GAAqC,EAFmD,EAGxFxF,EAAE,CAAC5B,uBAAuB,CAACqH,MAAzB,CAAF,GAAqC,EAHmD,EAIxFzF,EAJ4D,CAAT,EAI9CL,EAJe,EAAxB;AAKAmF,4BAAAA,UAAU,GAAG,CACT1G,uBAAuB,CAACmH,MADf,EAETnH,uBAAuB,CAACoH,MAFf,EAGTpH,uBAAuB,CAACqH,MAHf,CAAb;AAKAV,4BAAAA,yBAAyB,IAAIE,EAAE,GAAG,EAAL,EACzBA,EAAE,CAAC7G,uBAAuB,CAACmH,MAAzB,CAAF,GAAqC,CADZ,EAEzBN,EAAE,CAAC7G,uBAAuB,CAACoH,MAAzB,CAAF,GAAqC,CAFZ,EAGzBP,EAAE,CAAC7G,uBAAuB,CAACqH,MAAzB,CAAF,GAAqC,CAHZ,EAIzBR,EAJqB,CAAzB;;AAKAD,4BAAAA,aAAa,GAAG,UAAUU,SAAV,EAAqB;AAAE,qCAAOhL,SAAS,CAAC6H,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AACvF,oCAAI5C,EAAJ,EAAQN,uBAAR,EAAiCa,MAAjC,EAAyCC,KAAzC,EAAgDN,OAAhD,EAAyDC,UAAzD,EAAqEC,UAArE,EAAiFN,QAAjF,EAA2FkG,SAA3F,EAAsGC,SAAtG,EAAiHC,eAAjH,EAAkIC,yBAAlI;;AACA,oCAAIvD,KAAK,GAAG,IAAZ;;AACA,uCAAO3G,WAAW,CAAC,IAAD,EAAO,UAAUoE,EAAV,EAAc;AACnC,0CAAQA,EAAE,CAACjE,KAAX;AACI,yCAAK,CAAL;AACI4D,sCAAAA,EAAE,GAAG,KAAKT,iBAAL,CAAuBC,SAAvB,EAAkCwF,eAAlC,EAAmDe,SAAnD,EAA8DpG,eAA9D,EAA+EC,mBAA/E,EAAoGC,gBAApG,EAAsHqF,aAAa,CAACE,yBAAyB,CAACW,SAAD,CAA1B,CAAnI,CAAL,EAAiLrG,uBAAuB,GAAGM,EAAE,CAACM,MAA9M,EAAsNC,MAAM,GAAGP,EAAE,CAACO,MAAlO,EAA0OC,KAAK,GAAGR,EAAE,CAACQ,KAArP,EAA4PN,OAAO,GAAGF,EAAE,CAACE,OAAzQ,EAAkRC,UAAU,GAAGH,EAAE,CAACG,UAAlS,EAA8SC,UAAU,GAAGJ,EAAE,CAACI,UAA9T,EAA0UN,QAAQ,GAAGE,EAAE,CAACF,QAAxV;AACA,6CAAO,CAAC;AAAE;AAAH,wCAAcpB,qBAAqB,CAACoB,QAAD,EAAW,KAAKZ,aAAhB,CAAnC,CAAP;;AACJ,yCAAK,CAAL;AACI8G,sCAAAA,SAAS,GAAG3F,EAAE,CAAChE,IAAH,EAAZ;AACA4J,sCAAAA,SAAS,GAAG,EAAZ;;AACA,0CAAI/F,OAAJ,EAAa;AACT,4CAAI,CAACE,UAAL,EAAiB;AACb0C,0CAAAA,QAAQ,CAACtF,KAAT,CAAe,4EAAf;AACA,iDAAO,CAAC;AAAE;AAAH,2CAAP;AACH;;AACDyI,wCAAAA,SAAS,CAAC9F,UAAD,CAAT,GAAwBC,UAAxB;AACH;;AACDvB,sCAAAA,MAAM,CAAC8F,KAAP,CAAa,gBAAgBoB,SAAhB,GAA4B,+BAA5B,GAA8Db,aAAa,CAACE,yBAAyB,CAACW,SAAD,CAA1B,CAAxF;AACAG,sCAAAA,eAAe,GAAGvI,GAAG,CAACyI,OAAJ,CAAYnM,QAAQ,CAACA,QAAQ,CAAC;AAAEuG,wCAAAA,KAAK,EAAEA,KAAT;AAAgByF,wCAAAA,SAAS,EAAEA;AAA3B,uCAAD,EAAyC;AAAEnG,wCAAAA,QAAQ,EAAEA;AAAZ,uCAAzC,CAAT,EAA2E;AAAEkG,wCAAAA,SAAS,EAAEA;AAAb,uCAA3E,CAApB,CAAlB;AACAhD,sCAAAA,aAAa,CAACgC,eAAe,CAACU,IAAjB,CAAb,CAAoChG,uBAApC,EAA6DxC,IAA7D,CAAkEgJ,eAAe,CAC5EG,GAD6D,CACzD,UAAUrG,EAAV,EAAc;AACnB,4CAAI3E,KAAK,GAAG2E,EAAE,CAAC3E,KAAf;AACA,+CAAOA,KAAP;AACH,uCAJiE,EAK7DiL,SAL6D,CAKnD;AACX3K,wCAAAA,IAAI,EAAE,UAAUqE,EAAV,EAAc;AAChB,8CAAIuG,IAAI,GAAGvG,EAAE,CAACuG,IAAd;AAAA,8CAAoBC,MAAM,GAAGxG,EAAE,CAACwG,MAAhC;;AACA,8CAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,KAAyBA,MAAM,CAAC/L,MAAP,GAAgB,CAA7C,EAAgD;AAC5C,gDAAIkM,QAAQ,GAAGH,MAAM,CAACH,GAAP,CAAW,UAAUrG,EAAV,EAAc;AACpC,kDAAI4G,OAAO,GAAG5G,EAAE,CAAC4G,OAAjB;AACA,qDAAOA,OAAP;AACH,6CAHc,CAAf;AAIA/H,4CAAAA,MAAM,CAACgI,IAAP,CAAY,+CAA+CF,QAAQ,CAACG,IAAT,CAAc,IAAd,CAA3D;;AACAlE,4CAAAA,KAAK,CAACmE,WAAN;;AACA;AACH;;AACD,8CAAIC,eAAe,GAAGrI,qBAAqB,CAACsI,aAAtB,CAAoCrE,KAAK,CAAC3D,cAAN,CAAqBiI,GAArB,CAAyBlC,eAAzB,CAApC,EAA+E,KAA/E,CAAtB;AACA,8CAAI3E,EAAE,GAAGkG,IAAT;AAAA,8CAAejB,EAAE,GAAG/E,MAApB;AAAA,8CAA4B4G,MAAM,GAAG9G,EAAE,CAACiF,EAAD,CAAvC,CAZgB,CAahB;AACA;AACA;AACA;;AACA,8CAAI1C,KAAK,CAACwE,yBAAN,CAAgCD,MAAhC,EAAwCH,eAAxC,CAAJ,EAA8D;AAC1DpE,4CAAAA,KAAK,CAACyE,YAAN,CAAmB3H,uBAAnB,EAA4CsF,eAA5C,EAA6DmC,MAA7D;AACH;;AACDvE,0CAAAA,KAAK,CAACmE,WAAN;AACH,yCAtBU;AAuBXvJ,wCAAAA,KAAK,EAAE,UAAU8J,iBAAV,EAA6B;AAChC,8CAAItH,EAAE,GAAGsH,iBAAiB,CAAC9J,KAA3B;AAAA,8CAAkC6C,EAAE,GAAGlD,MAAM,CAAC,CAAC6C,EAAE,KAAK,KAAK,CAAZ,GAAgB;AAC3DwG,4CAAAA,MAAM,EAAE;AADmD,2CAAhB,GAE3CxG,EAF0C,EAEtCwG,MAFqC,EAE7B,CAF6B,CAA7C;AAAA,8CAEoBlB,EAAE,GAAGjF,EAAE,CAAC,CAAD,CAF3B;AAAA,8CAEgCkF,EAAE,GAAG,CAACD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAtB,EAA0BsB,OAF/D;AAAA,8CAEwEA,OAAO,GAAGrB,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAFvG;;AAGA,8CAAIqB,OAAO,CAACxF,QAAR,CAAiBjD,kBAAkB,CAACoJ,gCAApC,KACAX,OAAO,CAACxF,QAAR,CAAiBjD,kBAAkB,CAACqJ,iBAApC,CADJ,EAC4D;AACxD;AACAxE,4CAAAA,aAAa,CAACgC,eAAe,CAACU,IAAjB,CAAb,CAAoChG,uBAApC,EAA6DsC,OAA7D,CAAqE,UAAUyF,YAAV,EAAwB;AAAE,qDAAOA,YAAY,CAACC,WAAb,EAAP;AAAoC,6CAAnI;AACA1E,4CAAAA,aAAa,CAACgC,eAAe,CAACU,IAAjB,CAAb,CAAoChG,uBAApC,IAA+D,EAA/D;AACA0F,4CAAAA,yBAAyB,CAACW,SAAD,CAAzB;;AACA,gDAAIX,yBAAyB,CAACW,SAAD,CAAzB,IACAb,aAAa,CAACzK,MADlB,EAC0B;AACtBoE,8CAAAA,MAAM,CAAC8F,KAAP,CAAaoB,SAAS,GAAG,sCAAZ,GAAqDb,aAAa,CAACE,yBAAyB,CAACW,SAAD,CAAzB,GAAuC,CAAxC,CAA/E;AACAlH,8CAAAA,MAAM,CAACgI,IAAP,CAAY,mBAAZ,EAAiCD,OAAjC;AACA;AACH,6CALD,MAMK;AACD/H,8CAAAA,MAAM,CAAC8F,KAAP,CAAaoB,SAAS,GAAG,sCAAZ,GAAqDb,aAAa,CAACE,yBAAyB,CAACW,SAAD,CAAzB,GAAuC,CAAxC,CAAlE,GAA+G,4BAA/G,GAA8Ib,aAAa,CAACE,yBAAyB,CAACW,SAAD,CAA1B,CAAxK;AACAV,8CAAAA,aAAa,CAACU,SAAD,CAAb;AACA;AACH;AACJ;;AACDlH,0CAAAA,MAAM,CAACgI,IAAP,CAAY,mBAAZ,EAAiCD,OAAjC;;AACA,8CAAI,OAAOT,yBAAP,KAAqC,UAAzC,EAAqD;AACjDA,4CAAAA,yBAAyB;AAC5B;;AACD,8CAAIS,OAAO,CAACxF,QAAR,CAAiB,4BAAjB,KACAwF,OAAO,CAACxF,QAAR,CAAiB,iCAAjB,CADJ,EACyD;AACrD;AACH;;AACD0B,0CAAAA,QAAQ,CAACtF,KAAT,CAAeoJ,OAAf;AACH;AAtDU,uCALmD,CAAlE;AA6DA7D,sCAAAA,QAAQ,CAAC7F,IAAT,CAAe,YAAY;AAAE,+CAAOnC,SAAS,CAAC6H,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AAC7E,8CAAI+E,aAAJ;;AACA,8CAAI/E,KAAK,GAAG,IAAZ;;AACA,iDAAO3G,WAAW,CAAC,IAAD,EAAO,UAAU+D,EAAV,EAAc;AACnC,oDAAQA,EAAE,CAAC5D,KAAX;AACI,mDAAK,CAAL;AAAQ,uDAAO,CAAC;AAAE;AAAH,kDAAc,IAAIb,OAAJ,CAAY,UAAUqM,GAAV,EAAe;AAChDzB,kDAAAA,yBAAyB,GAAGyB,GAA5B;AACAD,kDAAAA,aAAa,GAAG/E,KAAK,CAACP,0BAAN,CAAiCwF,IAAjC,CAAsCjF,KAAtC,EAA6CgF,GAA7C,CAAhB;AACA3J,kDAAAA,GAAG,CAAC6J,MAAJ,CAAW,KAAX,EAAkBH,aAAlB;AACH,iDAJwB,CAAd,CAAP;;AAKR,mDAAK,CAAL;AACI3H,gDAAAA,EAAE,CAAC3D,IAAH;;AACA4B,gDAAAA,GAAG,CAAC8J,MAAJ,CAAW,KAAX,EAAkBJ,aAAlB;AACA,uDAAO,CAAC;AAAE;AAAH,iDAAP;AATR;AAWH,2CAZiB,CAAlB;AAaH,yCAhB4C,CAAhB;AAgBxB,uCAhBS,EAAd;AAiBA,6CAAO,CAAC;AAAE;AAAH,uCAAP;AA9FR;AAgGH,iCAjGiB,CAAlB;AAkGH,+BArGsD,CAAhB;AAqGlC,6BArGL;;AAsGAxC,4BAAAA,UAAU,CAACnD,OAAX,CAAmB,UAAUjF,EAAV,EAAc;AAAE,qCAAOsI,aAAa,CAACtI,EAAD,CAApB;AAA2B,6BAA9D;AACA,mCAAO,CAAC;AAAE;AAAH,6BAAP;AAjIR;AAmIH,uBApIiB,CAAlB;AAqIH,qBAzIyD,CAAhB;AAyIrC,mBA9IL;AA+IH,iBAhJD;AAiJAxB,gBAAAA,OAAO,CAACyM,GAAR,CAAYjF,QAAZ,EAAsB/G,IAAtB,CAA2B,YAAY;AAAE,yBAAO8G,QAAQ,CAACnH,IAAT,CAAcuC,WAAW,CAAC+J,SAA1B,CAAP;AAA8C,iBAAvF;AACA,uBAAO,CAAC;AAAE;AAAH,iBAAP;AAxMR;AA0MH,WA3MiB,CAAlB;AA4MH,SA/M8B,CAAhB;AA+MV,OA/ML;;AAgNA,aAAO,YAAY;AACf/N,QAAAA,MAAM,CAACgO,IAAP,CAAYlF,aAAZ,EAA2BhB,OAA3B,CAAmC,UAAUyD,SAAV,EAAqB;AACpDzC,UAAAA,aAAa,CAACyC,SAAD,CAAb,CAAyBhH,uBAAuB,CAACmH,MAAjD,EAAyD5D,OAAzD,CAAiE,UAAUyF,YAAV,EAAwB;AAAE,mBAAOA,YAAY,CAACC,WAAb,EAAP;AAAoC,WAA/H;AACA1E,UAAAA,aAAa,CAACyC,SAAD,CAAb,CAAyBhH,uBAAuB,CAACoH,MAAjD,EAAyD7D,OAAzD,CAAiE,UAAUyF,YAAV,EAAwB;AAAE,mBAAOA,YAAY,CAACC,WAAb,EAAP;AAAoC,WAA/H;AACA1E,UAAAA,aAAa,CAACyC,SAAD,CAAb,CAAyBhH,uBAAuB,CAACqH,MAAjD,EAAyD9D,OAAzD,CAAiE,UAAUyF,YAAV,EAAwB;AAAE,mBAAOA,YAAY,CAACC,WAAb,EAAP;AAAoC,WAA/H;AACH,SAJD;AAKH,OAND;AAOH,KA9NmB,CAApB;AA+NA,QAAIS,cAAc,GAAG,IAAI/J,UAAJ,CAAe,UAAU0E,QAAV,EAAoB;AACpDF,MAAAA,KAAK,CAACwF,YAAN,GAAqBtF,QAArB;;AACAF,MAAAA,KAAK,CAACmE,WAAN;;AACA,aAAO,YAAY;AACfnE,QAAAA,KAAK,CAACwF,YAAN,GAAqB,IAArB;AACH,OAFD;AAGH,KANoB,CAArB;AAOA,WAAO,CAACvF,aAAD,EAAgBsF,cAAhB,CAAP;AACH,GAzOD;;AA0OApJ,EAAAA,qBAAqB,CAACpE,SAAtB,CAAgCyM,yBAAhC,GAA4D,UAAUD,MAAV,EAAkBH,eAAlB,EAAmC;AAC3F,QAAI,CAACA,eAAL,EAAsB;AAClB,aAAO,IAAP;AACH;;AACD,QAAIqB,UAAU,GAAGrB,eAAe,CAACqB,UAAjC;AAAA,QAA6CC,IAAI,GAAGtB,eAAe,CAACsB,IAApE;AACA,WAAO1J,iBAAiB,CAACuI,MAAD,EAASmB,IAAT,EAAeD,UAAf,CAAxB;AACH,GAND;;AAOAtJ,EAAAA,qBAAqB,CAACpE,SAAtB,CAAgC0M,YAAhC,GAA+C,UAAU3H,uBAAV,EAAmCsF,eAAnC,EAAoDuB,IAApD,EAA0D;AACrG,SAAKjH,MAAL,CAAYpC,IAAZ,CAAiB,CAACwC,uBAAD,EAA0BsF,eAA1B,EAA2CuB,IAA3C,CAAjB;AACH,GAFD;;AAGAxH,EAAAA,qBAAqB,CAACpE,SAAtB,CAAgCoM,WAAhC,GAA8C,YAAY;AACtD,QAAInE,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKwF,YAAT,EAAuB;AACnB,WAAK9I,MAAL,CAAY0C,OAAZ,CAAoB,UAAUuE,IAAV,EAAgB;AAAE,eAAO3D,KAAK,CAACwF,YAAN,CAAmBzM,IAAnB,CAAwB4K,IAAxB,CAAP;AAAuC,OAA7E;AACA,WAAKjH,MAAL,GAAc,EAAd;AACH;AACJ,GAND;;AAOA,SAAOP,qBAAP;AACH,CArW0C,EAA3C;;AAsWA,SAASA,qBAAT","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport API, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { buildSubscriptionGraphQLOperation, getAuthorizationRules, getModelAuthModes, getUserGroupsFromToken, TransformerMutationType, getTokenForCustomAuth, } from '../utils';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { validatePredicate } from '../../util';\nvar logger = new Logger('DataStore');\nexport var CONTROL_MSG;\n(function (CONTROL_MSG) {\n    CONTROL_MSG[\"CONNECTED\"] = \"CONNECTED\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\nexport var USER_CREDENTIALS;\n(function (USER_CREDENTIALS) {\n    USER_CREDENTIALS[USER_CREDENTIALS[\"none\"] = 0] = \"none\";\n    USER_CREDENTIALS[USER_CREDENTIALS[\"unauth\"] = 1] = \"unauth\";\n    USER_CREDENTIALS[USER_CREDENTIALS[\"auth\"] = 2] = \"auth\";\n})(USER_CREDENTIALS || (USER_CREDENTIALS = {}));\nvar SubscriptionProcessor = /** @class */ (function () {\n    function SubscriptionProcessor(schema, syncPredicates, amplifyConfig, authModeStrategy) {\n        if (amplifyConfig === void 0) { amplifyConfig = {}; }\n        this.schema = schema;\n        this.syncPredicates = syncPredicates;\n        this.amplifyConfig = amplifyConfig;\n        this.authModeStrategy = authModeStrategy;\n        this.typeQuery = new WeakMap();\n        this.buffer = [];\n    }\n    SubscriptionProcessor.prototype.buildSubscription = function (namespace, model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload, authMode) {\n        var aws_appsync_authenticationType = this.amplifyConfig.aws_appsync_authenticationType;\n        var _a = this.getAuthorizationInfo(model, userCredentials, aws_appsync_authenticationType, cognitoTokenPayload, oidcTokenPayload, authMode) || {}, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue;\n        var _b = __read(buildSubscriptionGraphQLOperation(namespace, model, transformerMutationType, isOwner, ownerField), 3), opType = _b[0], opName = _b[1], query = _b[2];\n        return { authMode: authMode, opType: opType, opName: opName, query: query, isOwner: isOwner, ownerField: ownerField, ownerValue: ownerValue };\n    };\n    SubscriptionProcessor.prototype.getAuthorizationInfo = function (model, userCredentials, defaultAuthType, cognitoTokenPayload, oidcTokenPayload, authMode) {\n        if (cognitoTokenPayload === void 0) { cognitoTokenPayload = {}; }\n        if (oidcTokenPayload === void 0) { oidcTokenPayload = {}; }\n        var rules = getAuthorizationRules(model);\n        // Return null if user doesn't have proper credentials for private API with IAM auth\n        var iamPrivateAuth = authMode === GRAPHQL_AUTH_MODE.AWS_IAM &&\n            rules.find(function (rule) { return rule.authStrategy === 'private' && rule.provider === 'iam'; });\n        if (iamPrivateAuth && userCredentials === USER_CREDENTIALS.unauth) {\n            return null;\n        }\n        // Group auth should take precedence over owner auth, so we are checking\n        // if rule(s) have group authorization as well as if either the Cognito or\n        // OIDC token has a groupClaim. If so, we are returning auth info before\n        // any further owner-based auth checks.\n        var groupAuthRules = rules.filter(function (rule) {\n            return rule.authStrategy === 'groups' &&\n                ['userPools', 'oidc'].includes(rule.provider);\n        });\n        var validGroup = (authMode === GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS ||\n            authMode === GRAPHQL_AUTH_MODE.OPENID_CONNECT) &&\n            groupAuthRules.find(function (groupAuthRule) {\n                // validate token against groupClaim\n                var cognitoUserGroups = getUserGroupsFromToken(cognitoTokenPayload, groupAuthRule);\n                var oidcUserGroups = getUserGroupsFromToken(oidcTokenPayload, groupAuthRule);\n                return __spread(cognitoUserGroups, oidcUserGroups).find(function (userGroup) {\n                    return groupAuthRule.groups.find(function (group) { return group === userGroup; });\n                });\n            });\n        if (validGroup) {\n            return {\n                authMode: authMode,\n                isOwner: false,\n            };\n        }\n        // Owner auth needs additional values to be returned in order to create the subscription with\n        // the correct parameters so we are getting the owner value from the Cognito token via the\n        // identityClaim from the auth rule.\n        var cognitoOwnerAuthRules = authMode === GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS\n            ? rules.filter(function (rule) {\n                return rule.authStrategy === 'owner' && rule.provider === 'userPools';\n            })\n            : [];\n        var ownerAuthInfo;\n        cognitoOwnerAuthRules.forEach(function (ownerAuthRule) {\n            var ownerValue = cognitoTokenPayload[ownerAuthRule.identityClaim];\n            if (ownerValue) {\n                ownerAuthInfo = {\n                    authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n                    isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n                    ownerField: ownerAuthRule.ownerField,\n                    ownerValue: ownerValue,\n                };\n            }\n        });\n        if (ownerAuthInfo) {\n            return ownerAuthInfo;\n        }\n        // Owner auth needs additional values to be returned in order to create the subscription with\n        // the correct parameters so we are getting the owner value from the OIDC token via the\n        // identityClaim from the auth rule.\n        var oidcOwnerAuthRules = authMode === GRAPHQL_AUTH_MODE.OPENID_CONNECT\n            ? rules.filter(function (rule) { return rule.authStrategy === 'owner' && rule.provider === 'oidc'; })\n            : [];\n        oidcOwnerAuthRules.forEach(function (ownerAuthRule) {\n            var ownerValue = oidcTokenPayload[ownerAuthRule.identityClaim];\n            if (ownerValue) {\n                ownerAuthInfo = {\n                    authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n                    isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n                    ownerField: ownerAuthRule.ownerField,\n                    ownerValue: ownerValue,\n                };\n            }\n        });\n        if (ownerAuthInfo) {\n            return ownerAuthInfo;\n        }\n        // Fallback: return authMode or default auth type\n        return {\n            authMode: authMode || defaultAuthType,\n            isOwner: false,\n        };\n    };\n    SubscriptionProcessor.prototype.hubQueryCompletionListener = function (completed, capsule) {\n        var event = capsule.payload.event;\n        if (event === PUBSUB_CONTROL_MSG.SUBSCRIPTION_ACK) {\n            completed();\n        }\n    };\n    SubscriptionProcessor.prototype.start = function () {\n        var _this = this;\n        var ctlObservable = new Observable(function (observer) {\n            var promises = [];\n            // Creating subs for each model/operation combo so they can be unsubscribed\n            // independently, since the auth retry behavior is asynchronous.\n            var subscriptions = {};\n            var cognitoTokenPayload, oidcTokenPayload;\n            var userCredentials = USER_CREDENTIALS.none;\n            (function () { return __awaiter(_this, void 0, void 0, function () {\n                var credentials, err_1, session, err_2, _a, aws_cognito_region, AuthConfig, token, federatedInfo, currentUser, payload, err_3;\n                var _this = this;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _b.trys.push([0, 2, , 3]);\n                            return [4 /*yield*/, Auth.currentCredentials()];\n                        case 1:\n                            credentials = _b.sent();\n                            userCredentials = credentials.authenticated\n                                ? USER_CREDENTIALS.auth\n                                : USER_CREDENTIALS.unauth;\n                            return [3 /*break*/, 3];\n                        case 2:\n                            err_1 = _b.sent();\n                            return [3 /*break*/, 3];\n                        case 3:\n                            _b.trys.push([3, 5, , 6]);\n                            return [4 /*yield*/, Auth.currentSession()];\n                        case 4:\n                            session = _b.sent();\n                            cognitoTokenPayload = session.getIdToken().decodePayload();\n                            return [3 /*break*/, 6];\n                        case 5:\n                            err_2 = _b.sent();\n                            return [3 /*break*/, 6];\n                        case 6:\n                            _b.trys.push([6, 11, , 12]);\n                            _a = this.amplifyConfig, aws_cognito_region = _a.aws_cognito_region, AuthConfig = _a.Auth;\n                            if (!aws_cognito_region || (AuthConfig && !AuthConfig.region)) {\n                                throw 'Auth is not configured';\n                            }\n                            token = void 0;\n                            return [4 /*yield*/, Cache.getItem('federatedInfo')];\n                        case 7:\n                            federatedInfo = _b.sent();\n                            if (!federatedInfo) return [3 /*break*/, 8];\n                            token = federatedInfo.token;\n                            return [3 /*break*/, 10];\n                        case 8: return [4 /*yield*/, Auth.currentAuthenticatedUser()];\n                        case 9:\n                            currentUser = _b.sent();\n                            if (currentUser) {\n                                token = currentUser.token;\n                            }\n                            _b.label = 10;\n                        case 10:\n                            if (token) {\n                                payload = token.split('.')[1];\n                                oidcTokenPayload = JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n                            }\n                            return [3 /*break*/, 12];\n                        case 11:\n                            err_3 = _b.sent();\n                            logger.debug('error getting OIDC JWT', err_3);\n                            return [3 /*break*/, 12];\n                        case 12:\n                            Object.values(this.schema.namespaces).forEach(function (namespace) {\n                                Object.values(namespace.models)\n                                    .filter(function (_a) {\n                                    var syncable = _a.syncable;\n                                    return syncable;\n                                })\n                                    .forEach(function (modelDefinition) { return __awaiter(_this, void 0, void 0, function () {\n                                    var modelAuthModes, readAuthModes, operations, operationAuthModeAttempts, authModeRetry;\n                                    var _a, _b, _c;\n                                    var _this = this;\n                                    return __generator(this, function (_d) {\n                                        switch (_d.label) {\n                                            case 0: return [4 /*yield*/, getModelAuthModes({\n                                                    authModeStrategy: this.authModeStrategy,\n                                                    defaultAuthMode: this.amplifyConfig\n                                                        .aws_appsync_authenticationType,\n                                                    modelName: modelDefinition.name,\n                                                    schema: this.schema,\n                                                })];\n                                            case 1:\n                                                modelAuthModes = _d.sent();\n                                                readAuthModes = modelAuthModes.READ;\n                                                subscriptions = __assign(__assign({}, subscriptions), (_a = {}, _a[modelDefinition.name] = (_b = {},\n                                                    _b[TransformerMutationType.CREATE] = [],\n                                                    _b[TransformerMutationType.UPDATE] = [],\n                                                    _b[TransformerMutationType.DELETE] = [],\n                                                    _b), _a));\n                                                operations = [\n                                                    TransformerMutationType.CREATE,\n                                                    TransformerMutationType.UPDATE,\n                                                    TransformerMutationType.DELETE,\n                                                ];\n                                                operationAuthModeAttempts = (_c = {},\n                                                    _c[TransformerMutationType.CREATE] = 0,\n                                                    _c[TransformerMutationType.UPDATE] = 0,\n                                                    _c[TransformerMutationType.DELETE] = 0,\n                                                    _c);\n                                                authModeRetry = function (operation) { return __awaiter(_this, void 0, void 0, function () {\n                                                    var _a, transformerMutationType, opName, query, isOwner, ownerField, ownerValue, authMode, authToken, variables, queryObservable, subscriptionReadyCallback;\n                                                    var _this = this;\n                                                    return __generator(this, function (_b) {\n                                                        switch (_b.label) {\n                                                            case 0:\n                                                                _a = this.buildSubscription(namespace, modelDefinition, operation, userCredentials, cognitoTokenPayload, oidcTokenPayload, readAuthModes[operationAuthModeAttempts[operation]]), transformerMutationType = _a.opType, opName = _a.opName, query = _a.query, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue, authMode = _a.authMode;\n                                                                return [4 /*yield*/, getTokenForCustomAuth(authMode, this.amplifyConfig)];\n                                                            case 1:\n                                                                authToken = _b.sent();\n                                                                variables = {};\n                                                                if (isOwner) {\n                                                                    if (!ownerValue) {\n                                                                        observer.error('Owner field required, sign in is needed in order to perform this operation');\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    variables[ownerField] = ownerValue;\n                                                                }\n                                                                logger.debug(\"Attempting \" + operation + \" subscription with authMode: \" + readAuthModes[operationAuthModeAttempts[operation]]);\n                                                                queryObservable = API.graphql(__assign(__assign({ query: query, variables: variables }, { authMode: authMode }), { authToken: authToken }));\n                                                                subscriptions[modelDefinition.name][transformerMutationType].push(queryObservable\n                                                                    .map(function (_a) {\n                                                                    var value = _a.value;\n                                                                    return value;\n                                                                })\n                                                                    .subscribe({\n                                                                    next: function (_a) {\n                                                                        var data = _a.data, errors = _a.errors;\n                                                                        if (Array.isArray(errors) && errors.length > 0) {\n                                                                            var messages = errors.map(function (_a) {\n                                                                                var message = _a.message;\n                                                                                return message;\n                                                                            });\n                                                                            logger.warn(\"Skipping incoming subscription. Messages: \" + messages.join('\\n'));\n                                                                            _this.drainBuffer();\n                                                                            return;\n                                                                        }\n                                                                        var predicatesGroup = ModelPredicateCreator.getPredicates(_this.syncPredicates.get(modelDefinition), false);\n                                                                        var _b = data, _c = opName, record = _b[_c];\n                                                                        // checking incoming subscription against syncPredicate.\n                                                                        // once AppSync implements filters on subscriptions, we'll be\n                                                                        // able to set these when establishing the subscription instead.\n                                                                        // Until then, we'll need to filter inbound\n                                                                        if (_this.passesPredicateValidation(record, predicatesGroup)) {\n                                                                            _this.pushToBuffer(transformerMutationType, modelDefinition, record);\n                                                                        }\n                                                                        _this.drainBuffer();\n                                                                    },\n                                                                    error: function (subscriptionError) {\n                                                                        var _a = subscriptionError.error, _b = __read((_a === void 0 ? {\n                                                                            errors: [],\n                                                                        } : _a).errors, 1), _c = _b[0], _d = (_c === void 0 ? {} : _c).message, message = _d === void 0 ? '' : _d;\n                                                                        if (message.includes(PUBSUB_CONTROL_MSG.REALTIME_SUBSCRIPTION_INIT_ERROR) ||\n                                                                            message.includes(PUBSUB_CONTROL_MSG.CONNECTION_FAILED)) {\n                                                                            // Unsubscribe and clear subscription array for model/operation\n                                                                            subscriptions[modelDefinition.name][transformerMutationType].forEach(function (subscription) { return subscription.unsubscribe(); });\n                                                                            subscriptions[modelDefinition.name][transformerMutationType] = [];\n                                                                            operationAuthModeAttempts[operation]++;\n                                                                            if (operationAuthModeAttempts[operation] >=\n                                                                                readAuthModes.length) {\n                                                                                logger.debug(operation + \" subscription failed with authMode: \" + readAuthModes[operationAuthModeAttempts[operation] - 1]);\n                                                                                logger.warn('subscriptionError', message);\n                                                                                return;\n                                                                            }\n                                                                            else {\n                                                                                logger.debug(operation + \" subscription failed with authMode: \" + readAuthModes[operationAuthModeAttempts[operation] - 1] + \". Retrying with authMode: \" + readAuthModes[operationAuthModeAttempts[operation]]);\n                                                                                authModeRetry(operation);\n                                                                                return;\n                                                                            }\n                                                                        }\n                                                                        logger.warn('subscriptionError', message);\n                                                                        if (typeof subscriptionReadyCallback === 'function') {\n                                                                            subscriptionReadyCallback();\n                                                                        }\n                                                                        if (message.includes('\"errorType\":\"Unauthorized\"') ||\n                                                                            message.includes('\"errorType\":\"OperationDisabled\"')) {\n                                                                            return;\n                                                                        }\n                                                                        observer.error(message);\n                                                                    },\n                                                                }));\n                                                                promises.push((function () { return __awaiter(_this, void 0, void 0, function () {\n                                                                    var boundFunction;\n                                                                    var _this = this;\n                                                                    return __generator(this, function (_a) {\n                                                                        switch (_a.label) {\n                                                                            case 0: return [4 /*yield*/, new Promise(function (res) {\n                                                                                    subscriptionReadyCallback = res;\n                                                                                    boundFunction = _this.hubQueryCompletionListener.bind(_this, res);\n                                                                                    Hub.listen('api', boundFunction);\n                                                                                })];\n                                                                            case 1:\n                                                                                _a.sent();\n                                                                                Hub.remove('api', boundFunction);\n                                                                                return [2 /*return*/];\n                                                                        }\n                                                                    });\n                                                                }); })());\n                                                                return [2 /*return*/];\n                                                        }\n                                                    });\n                                                }); };\n                                                operations.forEach(function (op) { return authModeRetry(op); });\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                }); });\n                            });\n                            Promise.all(promises).then(function () { return observer.next(CONTROL_MSG.CONNECTED); });\n                            return [2 /*return*/];\n                    }\n                });\n            }); })();\n            return function () {\n                Object.keys(subscriptions).forEach(function (modelName) {\n                    subscriptions[modelName][TransformerMutationType.CREATE].forEach(function (subscription) { return subscription.unsubscribe(); });\n                    subscriptions[modelName][TransformerMutationType.UPDATE].forEach(function (subscription) { return subscription.unsubscribe(); });\n                    subscriptions[modelName][TransformerMutationType.DELETE].forEach(function (subscription) { return subscription.unsubscribe(); });\n                });\n            };\n        });\n        var dataObservable = new Observable(function (observer) {\n            _this.dataObserver = observer;\n            _this.drainBuffer();\n            return function () {\n                _this.dataObserver = null;\n            };\n        });\n        return [ctlObservable, dataObservable];\n    };\n    SubscriptionProcessor.prototype.passesPredicateValidation = function (record, predicatesGroup) {\n        if (!predicatesGroup) {\n            return true;\n        }\n        var predicates = predicatesGroup.predicates, type = predicatesGroup.type;\n        return validatePredicate(record, type, predicates);\n    };\n    SubscriptionProcessor.prototype.pushToBuffer = function (transformerMutationType, modelDefinition, data) {\n        this.buffer.push([transformerMutationType, modelDefinition, data]);\n    };\n    SubscriptionProcessor.prototype.drainBuffer = function () {\n        var _this = this;\n        if (this.dataObserver) {\n            this.buffer.forEach(function (data) { return _this.dataObserver.next(data); });\n            this.buffer = [];\n        }\n    };\n    return SubscriptionProcessor;\n}());\nexport { SubscriptionProcessor };\n"]},"metadata":{},"sourceType":"module"}