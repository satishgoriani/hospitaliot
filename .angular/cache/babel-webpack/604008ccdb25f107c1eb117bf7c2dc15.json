{"ast":null,"code":"import { __asyncGenerator, __await, __awaiter, __generator } from \"tslib\";\n/**\n * A util function converting ReadableStream into an async iterable.\n * Reference: https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\n\nexport var readableStreamtoIterable = function (readableStream) {\n  var _a;\n\n  return _a = {}, _a[Symbol.asyncIterator] = function () {\n    return __asyncGenerator(this, arguments, function () {\n      var reader, _a, done, value;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            reader = readableStream.getReader();\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1,, 9, 10]);\n\n            _b.label = 2;\n\n          case 2:\n            if (!true) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , __await(reader.read())];\n\n          case 3:\n            _a = _b.sent(), done = _a.done, value = _a.value;\n            if (!done) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , __await(void 0)];\n\n          case 4:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 5:\n            return [4\n            /*yield*/\n            , __await(value)];\n\n          case 6:\n            return [4\n            /*yield*/\n            , _b.sent()];\n\n          case 7:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 2];\n\n          case 8:\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            reader.releaseLock();\n            return [7\n            /*endfinally*/\n            ];\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, _a;\n};\n/**\n * A util function converting async iterable to a ReadableStream.\n */\n\nexport var iterableToReadableStream = function (asyncIterable) {\n  var iterator = asyncIterable[Symbol.asyncIterator]();\n  return new ReadableStream({\n    pull: function (controller) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, done, value;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , iterator.next()];\n\n            case 1:\n              _a = _b.sent(), done = _a.done, value = _a.value;\n\n              if (done) {\n                return [2\n                /*return*/\n                , controller.close()];\n              }\n\n              controller.enqueue(value);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n};","map":{"version":3,"sources":["c:/work/NodeProjects/hospitaliot/node_modules/@aws-sdk/eventstream-serde-browser/dist/es/utils.js"],"names":["__asyncGenerator","__await","__awaiter","__generator","readableStreamtoIterable","readableStream","_a","Symbol","asyncIterator","arguments","reader","done","value","_b","label","getReader","trys","push","read","sent","releaseLock","iterableToReadableStream","asyncIterable","iterator","ReadableStream","pull","controller","next","close","enqueue"],"mappings":"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","sourcesContent":["import { __asyncGenerator, __await, __awaiter, __generator } from \"tslib\";\n/**\n * A util function converting ReadableStream into an async iterable.\n * Reference: https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\nexport var readableStreamtoIterable = function (readableStream) {\n    var _a;\n    return (_a = {},\n        _a[Symbol.asyncIterator] = function () {\n            return __asyncGenerator(this, arguments, function () {\n                var reader, _a, done, value;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            reader = readableStream.getReader();\n                            _b.label = 1;\n                        case 1:\n                            _b.trys.push([1, , 9, 10]);\n                            _b.label = 2;\n                        case 2:\n                            if (!true) return [3 /*break*/, 8];\n                            return [4 /*yield*/, __await(reader.read())];\n                        case 3:\n                            _a = _b.sent(), done = _a.done, value = _a.value;\n                            if (!done) return [3 /*break*/, 5];\n                            return [4 /*yield*/, __await(void 0)];\n                        case 4: return [2 /*return*/, _b.sent()];\n                        case 5: return [4 /*yield*/, __await(value)];\n                        case 6: return [4 /*yield*/, _b.sent()];\n                        case 7:\n                            _b.sent();\n                            return [3 /*break*/, 2];\n                        case 8: return [3 /*break*/, 10];\n                        case 9:\n                            reader.releaseLock();\n                            return [7 /*endfinally*/];\n                        case 10: return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        _a);\n};\n/**\n * A util function converting async iterable to a ReadableStream.\n */\nexport var iterableToReadableStream = function (asyncIterable) {\n    var iterator = asyncIterable[Symbol.asyncIterator]();\n    return new ReadableStream({\n        pull: function (controller) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a, done, value;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, iterator.next()];\n                        case 1:\n                            _a = _b.sent(), done = _a.done, value = _a.value;\n                            if (done) {\n                                return [2 /*return*/, controller.close()];\n                            }\n                            controller.enqueue(value);\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        },\n    });\n};\n"]},"metadata":{},"sourceType":"module"}