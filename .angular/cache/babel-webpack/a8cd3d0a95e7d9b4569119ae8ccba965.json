{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { OpType, QueryOne } from '../../types';\nimport { monotonicUlidFactory } from '../../util';\nimport { createInMemoryStore } from './InMemoryStore';\nvar DB_NAME = '@AmplifyDatastore';\nvar COLLECTION = 'Collection';\nvar DATA = 'Data';\nvar monotonicFactoriesMap = new Map();\n\nvar AsyncStorageDatabase =\n/** @class */\nfunction () {\n  function AsyncStorageDatabase() {\n    /**\n     * Maps storeNames to a map of ulid->id\n     */\n    this._collectionInMemoryIndex = new Map();\n    this.storage = createInMemoryStore();\n  }\n\n  AsyncStorageDatabase.prototype.getCollectionIndex = function (storeName) {\n    if (!this._collectionInMemoryIndex.has(storeName)) {\n      this._collectionInMemoryIndex.set(storeName, new Map());\n    }\n\n    return this._collectionInMemoryIndex.get(storeName);\n  };\n\n  AsyncStorageDatabase.prototype.getMonotonicFactory = function (storeName) {\n    if (!monotonicFactoriesMap.has(storeName)) {\n      monotonicFactoriesMap.set(storeName, monotonicUlidFactory());\n    }\n\n    return monotonicFactoriesMap.get(storeName);\n  };\n\n  AsyncStorageDatabase.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allKeys, keysForCollectionEntries, allKeys_1, allKeys_1_1, key, _a, dbName, storeName, recordType, ulidOrId, id, ulid, id_1, newUlid, oldKey, newKey, item, e_1_1;\n\n      var e_1, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            this._collectionInMemoryIndex.clear();\n\n            return [4\n            /*yield*/\n            , this.storage.getAllKeys()];\n\n          case 1:\n            allKeys = _c.sent();\n            keysForCollectionEntries = [];\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 12, 13, 14]);\n\n            allKeys_1 = __values(allKeys), allKeys_1_1 = allKeys_1.next();\n            _c.label = 3;\n\n          case 3:\n            if (!!allKeys_1_1.done) return [3\n            /*break*/\n            , 11];\n            key = allKeys_1_1.value;\n            _a = __read(key.split('::'), 5), dbName = _a[0], storeName = _a[1], recordType = _a[2], ulidOrId = _a[3], id = _a[4];\n            if (!(dbName === DB_NAME)) return [3\n            /*break*/\n            , 10];\n            if (!(recordType === DATA)) return [3\n            /*break*/\n            , 9];\n            ulid = void 0;\n            if (!(id === undefined)) return [3\n            /*break*/\n            , 7];\n            id_1 = ulidOrId;\n            newUlid = this.getMonotonicFactory(storeName)();\n            oldKey = this.getLegacyKeyForItem(storeName, id_1);\n            newKey = this.getKeyForItem(storeName, id_1, newUlid);\n            return [4\n            /*yield*/\n            , this.storage.getItem(oldKey)];\n\n          case 4:\n            item = _c.sent();\n            return [4\n            /*yield*/\n            , this.storage.setItem(newKey, item)];\n\n          case 5:\n            _c.sent();\n\n            return [4\n            /*yield*/\n            , this.storage.removeItem(oldKey)];\n\n          case 6:\n            _c.sent();\n\n            ulid = newUlid;\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            ulid = ulidOrId;\n            _c.label = 8;\n\n          case 8:\n            this.getCollectionIndex(storeName).set(id, ulid);\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            if (recordType === COLLECTION) {\n              keysForCollectionEntries.push(key);\n            }\n\n            _c.label = 10;\n\n          case 10:\n            allKeys_1_1 = allKeys_1.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 11:\n            return [3\n            /*break*/\n            , 14];\n\n          case 12:\n            e_1_1 = _c.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 14];\n\n          case 13:\n            try {\n              if (allKeys_1_1 && !allKeys_1_1.done && (_b = allKeys_1.return)) _b.call(allKeys_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 14:\n            if (!(keysForCollectionEntries.length > 0)) return [3\n            /*break*/\n            , 16];\n            return [4\n            /*yield*/\n            , this.storage.multiRemove(keysForCollectionEntries)];\n\n          case 15:\n            _c.sent();\n\n            _c.label = 16;\n\n          case 16:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.save = function (item, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(item.id) || this.getMonotonicFactory(storeName)();\n            itemKey = this.getKeyForItem(storeName, item.id, ulid);\n            this.getCollectionIndex(storeName).set(item.id, ulid);\n            return [4\n            /*yield*/\n            , this.storage.setItem(itemKey, JSON.stringify(item))];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.batchSave = function (storeName, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, collection, keysToDelete, keysToSave, allItemsKeys, itemsMap, items_1, items_1_1, item, id, _deleted, ulid, key, existingRecordsMap, existingRecordsKeys, allItemsKeys_1, allItemsKeys_1_1, key;\n\n      var e_2, _a, e_3, _b;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (items.length === 0) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            result = [];\n            collection = this.getCollectionIndex(storeName);\n            keysToDelete = new Set();\n            keysToSave = new Set();\n            allItemsKeys = [];\n            itemsMap = {};\n\n            try {\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                id = item.id, _deleted = item._deleted;\n                ulid = collection.get(id) || this.getMonotonicFactory(storeName)();\n                key = this.getKeyForItem(storeName, id, ulid);\n                allItemsKeys.push(key);\n                itemsMap[key] = {\n                  ulid: ulid,\n                  model: item\n                };\n\n                if (_deleted) {\n                  keysToDelete.add(key);\n                } else {\n                  keysToSave.add(key);\n                }\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n\n            return [4\n            /*yield*/\n            , this.storage.multiGet(allItemsKeys)];\n\n          case 1:\n            existingRecordsMap = _c.sent();\n            existingRecordsKeys = existingRecordsMap.filter(function (_a) {\n              var _b = __read(_a, 2),\n                  v = _b[1];\n\n              return !!v;\n            }).reduce(function (set, _a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return set.add(k);\n            }, new Set());\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              if (keysToDelete.size === 0) {\n                resolve();\n                return;\n              }\n\n              var keysToDeleteArray = Array.from(keysToDelete);\n              keysToDeleteArray.forEach(function (key) {\n                return collection.delete(itemsMap[key].model.id);\n              });\n\n              _this.storage.multiRemove(keysToDeleteArray, function (errors) {\n                if (errors && errors.length > 0) {\n                  reject(errors);\n                } else {\n                  resolve();\n                }\n              });\n            })];\n\n          case 2:\n            _c.sent();\n\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              if (keysToSave.size === 0) {\n                resolve();\n                return;\n              }\n\n              var entriesToSet = Array.from(keysToSave).map(function (key) {\n                return [key, JSON.stringify(itemsMap[key].model)];\n              });\n              keysToSave.forEach(function (key) {\n                var _a = itemsMap[key],\n                    id = _a.model.id,\n                    ulid = _a.ulid;\n                collection.set(id, ulid);\n              });\n\n              _this.storage.multiSet(entriesToSet, function (errors) {\n                if (errors && errors.length > 0) {\n                  reject(errors);\n                } else {\n                  resolve();\n                }\n              });\n            })];\n\n          case 3:\n            _c.sent();\n\n            try {\n              for (allItemsKeys_1 = __values(allItemsKeys), allItemsKeys_1_1 = allItemsKeys_1.next(); !allItemsKeys_1_1.done; allItemsKeys_1_1 = allItemsKeys_1.next()) {\n                key = allItemsKeys_1_1.value;\n\n                if (keysToDelete.has(key) && existingRecordsKeys.has(key)) {\n                  result.push([itemsMap[key].model, OpType.DELETE]);\n                } else if (keysToSave.has(key)) {\n                  result.push([itemsMap[key].model, existingRecordsKeys.has(key) ? OpType.UPDATE : OpType.INSERT]);\n                }\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (allItemsKeys_1_1 && !allItemsKeys_1_1.done && (_b = allItemsKeys_1.return)) _b.call(allItemsKeys_1);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.get = function (id, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey, recordAsString, record;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(id);\n            itemKey = this.getKeyForItem(storeName, id, ulid);\n            return [4\n            /*yield*/\n            , this.storage.getItem(itemKey)];\n\n          case 1:\n            recordAsString = _a.sent();\n            record = recordAsString && JSON.parse(recordAsString);\n            return [2\n            /*return*/\n            , record];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.getOne = function (firstOrLast, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var collection, _a, itemId, ulid, itemKey, itemString, _b, result;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            collection = this.getCollectionIndex(storeName);\n            _a = __read(firstOrLast === QueryOne.FIRST ? function () {\n              var e_4, _a, _b;\n\n              var id, ulid;\n\n              try {\n                for (var collection_1 = __values(collection), collection_1_1 = collection_1.next(); !collection_1_1.done; collection_1_1 = collection_1.next()) {\n                  _b = __read(collection_1_1.value, 2), id = _b[0], ulid = _b[1];\n                  break;\n                } // Get first element of the set\n\n              } catch (e_4_1) {\n                e_4 = {\n                  error: e_4_1\n                };\n              } finally {\n                try {\n                  if (collection_1_1 && !collection_1_1.done && (_a = collection_1.return)) _a.call(collection_1);\n                } finally {\n                  if (e_4) throw e_4.error;\n                }\n              }\n\n              return [id, ulid];\n            }() : function () {\n              var e_5, _a, _b;\n\n              var id, ulid;\n\n              try {\n                for (var collection_2 = __values(collection), collection_2_1 = collection_2.next(); !collection_2_1.done; collection_2_1 = collection_2.next()) {\n                  _b = __read(collection_2_1.value, 2), id = _b[0], ulid = _b[1];\n                  ;\n                } // Get last element of the set\n\n              } catch (e_5_1) {\n                e_5 = {\n                  error: e_5_1\n                };\n              } finally {\n                try {\n                  if (collection_2_1 && !collection_2_1.done && (_a = collection_2.return)) _a.call(collection_2);\n                } finally {\n                  if (e_5) throw e_5.error;\n                }\n              }\n\n              return [id, ulid];\n            }(), 2), itemId = _a[0], ulid = _a[1];\n            itemKey = this.getKeyForItem(storeName, itemId, ulid);\n            _b = itemKey;\n            if (!_b) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.storage.getItem(itemKey)];\n\n          case 1:\n            _b = _c.sent();\n            _c.label = 2;\n\n          case 2:\n            itemString = _b;\n            result = itemString ? JSON.parse(itemString) || undefined : undefined;\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * This function gets all the records stored in async storage for a particular storeName\n   * It then loads all the records for that filtered set of keys using multiGet()\n   */\n\n\n  AsyncStorageDatabase.prototype.getAll = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var collection, _a, _b, page, _c, limit, start, end, keysForStore, count, collection_3, collection_3_1, _d, id, ulid, storeRecordStrings, records;\n\n      var e_6, _e;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            collection = this.getCollectionIndex(storeName);\n            _a = pagination || {}, _b = _a.page, page = _b === void 0 ? 0 : _b, _c = _a.limit, limit = _c === void 0 ? 0 : _c;\n            start = Math.max(0, page * limit) || 0;\n            end = limit > 0 ? start + limit : undefined;\n            keysForStore = [];\n            count = 0;\n\n            try {\n              for (collection_3 = __values(collection), collection_3_1 = collection_3.next(); !collection_3_1.done; collection_3_1 = collection_3.next()) {\n                _d = __read(collection_3_1.value, 2), id = _d[0], ulid = _d[1];\n                count++;\n\n                if (count <= start) {\n                  continue;\n                }\n\n                keysForStore.push(this.getKeyForItem(storeName, id, ulid));\n\n                if (count === end) {\n                  break;\n                }\n              }\n            } catch (e_6_1) {\n              e_6 = {\n                error: e_6_1\n              };\n            } finally {\n              try {\n                if (collection_3_1 && !collection_3_1.done && (_e = collection_3.return)) _e.call(collection_3);\n              } finally {\n                if (e_6) throw e_6.error;\n              }\n            }\n\n            return [4\n            /*yield*/\n            , this.storage.multiGet(keysForStore)];\n\n          case 1:\n            storeRecordStrings = _f.sent();\n            records = storeRecordStrings.filter(function (_a) {\n              var _b = __read(_a, 2),\n                  value = _b[1];\n\n              return value;\n            }).map(function (_a) {\n              var _b = __read(_a, 2),\n                  value = _b[1];\n\n              return JSON.parse(value);\n            });\n            return [2\n            /*return*/\n            , records];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.delete = function (id, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(id);\n            itemKey = this.getKeyForItem(storeName, id, ulid);\n            this.getCollectionIndex(storeName).delete(id);\n            return [4\n            /*yield*/\n            , this.storage.removeItem(itemKey)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Clear the AsyncStorage of all DataStore entries\n   */\n\n\n  AsyncStorageDatabase.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allKeys, allDataStoreKeys;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.storage.getAllKeys()];\n\n          case 1:\n            allKeys = _a.sent();\n            allDataStoreKeys = allKeys.filter(function (key) {\n              return key.startsWith(DB_NAME);\n            });\n            return [4\n            /*yield*/\n            , this.storage.multiRemove(allDataStoreKeys)];\n\n          case 2:\n            _a.sent();\n\n            this._collectionInMemoryIndex.clear();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.getKeyForItem = function (storeName, id, ulid) {\n    return this.getKeyPrefixForStoreItems(storeName) + \"::\" + ulid + \"::\" + id;\n  };\n\n  AsyncStorageDatabase.prototype.getLegacyKeyForItem = function (storeName, id) {\n    return this.getKeyPrefixForStoreItems(storeName) + \"::\" + id;\n  };\n\n  AsyncStorageDatabase.prototype.getKeyPrefixForStoreItems = function (storeName) {\n    return DB_NAME + \"::\" + storeName + \"::\" + DATA;\n  };\n\n  return AsyncStorageDatabase;\n}();\n\nexport default AsyncStorageDatabase;","map":{"version":3,"sources":["c:/work/NodeProjects/hospitaliot/node_modules/@aws-amplify/datastore/lib-esm/storage/adapter/AsyncStorageDatabase.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__values","o","s","m","i","__read","r","ar","error","OpType","QueryOne","monotonicUlidFactory","createInMemoryStore","DB_NAME","COLLECTION","DATA","monotonicFactoriesMap","Map","AsyncStorageDatabase","_collectionInMemoryIndex","storage","prototype","getCollectionIndex","storeName","has","set","get","getMonotonicFactory","init","allKeys","keysForCollectionEntries","allKeys_1","allKeys_1_1","key","_a","dbName","recordType","ulidOrId","id","ulid","id_1","newUlid","oldKey","newKey","item","e_1_1","e_1","_b","_c","clear","getAllKeys","split","undefined","getLegacyKeyForItem","getKeyForItem","getItem","setItem","removeItem","return","multiRemove","save","itemKey","JSON","stringify","batchSave","items","collection","keysToDelete","keysToSave","allItemsKeys","itemsMap","items_1","items_1_1","_deleted","existingRecordsMap","existingRecordsKeys","allItemsKeys_1","allItemsKeys_1_1","e_2","e_3","_this","Set","model","add","e_2_1","multiGet","filter","reduce","k","size","keysToDeleteArray","Array","from","forEach","delete","errors","entriesToSet","map","multiSet","DELETE","UPDATE","INSERT","e_3_1","recordAsString","record","parse","getOne","firstOrLast","itemId","itemString","FIRST","e_4","collection_1","collection_1_1","e_4_1","e_5","collection_2","collection_2_1","e_5_1","getAll","pagination","page","limit","start","end","keysForStore","count","collection_3","collection_3_1","_d","storeRecordStrings","records","e_6","_e","_f","Math","max","e_6_1","allDataStoreKeys","startsWith","getKeyPrefixForStoreItems"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { OpType, QueryOne, } from '../../types';\nimport { monotonicUlidFactory } from '../../util';\nimport { createInMemoryStore } from './InMemoryStore';\nvar DB_NAME = '@AmplifyDatastore';\nvar COLLECTION = 'Collection';\nvar DATA = 'Data';\nvar monotonicFactoriesMap = new Map();\nvar AsyncStorageDatabase = /** @class */ (function () {\n    function AsyncStorageDatabase() {\n        /**\n         * Maps storeNames to a map of ulid->id\n         */\n        this._collectionInMemoryIndex = new Map();\n        this.storage = createInMemoryStore();\n    }\n    AsyncStorageDatabase.prototype.getCollectionIndex = function (storeName) {\n        if (!this._collectionInMemoryIndex.has(storeName)) {\n            this._collectionInMemoryIndex.set(storeName, new Map());\n        }\n        return this._collectionInMemoryIndex.get(storeName);\n    };\n    AsyncStorageDatabase.prototype.getMonotonicFactory = function (storeName) {\n        if (!monotonicFactoriesMap.has(storeName)) {\n            monotonicFactoriesMap.set(storeName, monotonicUlidFactory());\n        }\n        return monotonicFactoriesMap.get(storeName);\n    };\n    AsyncStorageDatabase.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var allKeys, keysForCollectionEntries, allKeys_1, allKeys_1_1, key, _a, dbName, storeName, recordType, ulidOrId, id, ulid, id_1, newUlid, oldKey, newKey, item, e_1_1;\n            var e_1, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        this._collectionInMemoryIndex.clear();\n                        return [4 /*yield*/, this.storage.getAllKeys()];\n                    case 1:\n                        allKeys = _c.sent();\n                        keysForCollectionEntries = [];\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 12, 13, 14]);\n                        allKeys_1 = __values(allKeys), allKeys_1_1 = allKeys_1.next();\n                        _c.label = 3;\n                    case 3:\n                        if (!!allKeys_1_1.done) return [3 /*break*/, 11];\n                        key = allKeys_1_1.value;\n                        _a = __read(key.split('::'), 5), dbName = _a[0], storeName = _a[1], recordType = _a[2], ulidOrId = _a[3], id = _a[4];\n                        if (!(dbName === DB_NAME)) return [3 /*break*/, 10];\n                        if (!(recordType === DATA)) return [3 /*break*/, 9];\n                        ulid = void 0;\n                        if (!(id === undefined)) return [3 /*break*/, 7];\n                        id_1 = ulidOrId;\n                        newUlid = this.getMonotonicFactory(storeName)();\n                        oldKey = this.getLegacyKeyForItem(storeName, id_1);\n                        newKey = this.getKeyForItem(storeName, id_1, newUlid);\n                        return [4 /*yield*/, this.storage.getItem(oldKey)];\n                    case 4:\n                        item = _c.sent();\n                        return [4 /*yield*/, this.storage.setItem(newKey, item)];\n                    case 5:\n                        _c.sent();\n                        return [4 /*yield*/, this.storage.removeItem(oldKey)];\n                    case 6:\n                        _c.sent();\n                        ulid = newUlid;\n                        return [3 /*break*/, 8];\n                    case 7:\n                        ulid = ulidOrId;\n                        _c.label = 8;\n                    case 8:\n                        this.getCollectionIndex(storeName).set(id, ulid);\n                        return [3 /*break*/, 10];\n                    case 9:\n                        if (recordType === COLLECTION) {\n                            keysForCollectionEntries.push(key);\n                        }\n                        _c.label = 10;\n                    case 10:\n                        allKeys_1_1 = allKeys_1.next();\n                        return [3 /*break*/, 3];\n                    case 11: return [3 /*break*/, 14];\n                    case 12:\n                        e_1_1 = _c.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 14];\n                    case 13:\n                        try {\n                            if (allKeys_1_1 && !allKeys_1_1.done && (_b = allKeys_1.return)) _b.call(allKeys_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 14:\n                        if (!(keysForCollectionEntries.length > 0)) return [3 /*break*/, 16];\n                        return [4 /*yield*/, this.storage.multiRemove(keysForCollectionEntries)];\n                    case 15:\n                        _c.sent();\n                        _c.label = 16;\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AsyncStorageDatabase.prototype.save = function (item, storeName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ulid, itemKey;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ulid = this.getCollectionIndex(storeName).get(item.id) ||\n                            this.getMonotonicFactory(storeName)();\n                        itemKey = this.getKeyForItem(storeName, item.id, ulid);\n                        this.getCollectionIndex(storeName).set(item.id, ulid);\n                        return [4 /*yield*/, this.storage.setItem(itemKey, JSON.stringify(item))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AsyncStorageDatabase.prototype.batchSave = function (storeName, items) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, collection, keysToDelete, keysToSave, allItemsKeys, itemsMap, items_1, items_1_1, item, id, _deleted, ulid, key, existingRecordsMap, existingRecordsKeys, allItemsKeys_1, allItemsKeys_1_1, key;\n            var e_2, _a, e_3, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (items.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        result = [];\n                        collection = this.getCollectionIndex(storeName);\n                        keysToDelete = new Set();\n                        keysToSave = new Set();\n                        allItemsKeys = [];\n                        itemsMap = {};\n                        try {\n                            for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                                item = items_1_1.value;\n                                id = item.id, _deleted = item._deleted;\n                                ulid = collection.get(id) || this.getMonotonicFactory(storeName)();\n                                key = this.getKeyForItem(storeName, id, ulid);\n                                allItemsKeys.push(key);\n                                itemsMap[key] = { ulid: ulid, model: item };\n                                if (_deleted) {\n                                    keysToDelete.add(key);\n                                }\n                                else {\n                                    keysToSave.add(key);\n                                }\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        return [4 /*yield*/, this.storage.multiGet(allItemsKeys)];\n                    case 1:\n                        existingRecordsMap = _c.sent();\n                        existingRecordsKeys = existingRecordsMap\n                            .filter(function (_a) {\n                            var _b = __read(_a, 2), v = _b[1];\n                            return !!v;\n                        })\n                            .reduce(function (set, _a) {\n                            var _b = __read(_a, 1), k = _b[0];\n                            return set.add(k);\n                        }, new Set());\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                if (keysToDelete.size === 0) {\n                                    resolve();\n                                    return;\n                                }\n                                var keysToDeleteArray = Array.from(keysToDelete);\n                                keysToDeleteArray.forEach(function (key) {\n                                    return collection.delete(itemsMap[key].model.id);\n                                });\n                                _this.storage.multiRemove(keysToDeleteArray, function (errors) {\n                                    if (errors && errors.length > 0) {\n                                        reject(errors);\n                                    }\n                                    else {\n                                        resolve();\n                                    }\n                                });\n                            })];\n                    case 2:\n                        _c.sent();\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                if (keysToSave.size === 0) {\n                                    resolve();\n                                    return;\n                                }\n                                var entriesToSet = Array.from(keysToSave).map(function (key) { return [\n                                    key,\n                                    JSON.stringify(itemsMap[key].model),\n                                ]; });\n                                keysToSave.forEach(function (key) {\n                                    var _a = itemsMap[key], id = _a.model.id, ulid = _a.ulid;\n                                    collection.set(id, ulid);\n                                });\n                                _this.storage.multiSet(entriesToSet, function (errors) {\n                                    if (errors && errors.length > 0) {\n                                        reject(errors);\n                                    }\n                                    else {\n                                        resolve();\n                                    }\n                                });\n                            })];\n                    case 3:\n                        _c.sent();\n                        try {\n                            for (allItemsKeys_1 = __values(allItemsKeys), allItemsKeys_1_1 = allItemsKeys_1.next(); !allItemsKeys_1_1.done; allItemsKeys_1_1 = allItemsKeys_1.next()) {\n                                key = allItemsKeys_1_1.value;\n                                if (keysToDelete.has(key) && existingRecordsKeys.has(key)) {\n                                    result.push([itemsMap[key].model, OpType.DELETE]);\n                                }\n                                else if (keysToSave.has(key)) {\n                                    result.push([\n                                        itemsMap[key].model,\n                                        existingRecordsKeys.has(key) ? OpType.UPDATE : OpType.INSERT,\n                                    ]);\n                                }\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (allItemsKeys_1_1 && !allItemsKeys_1_1.done && (_b = allItemsKeys_1.return)) _b.call(allItemsKeys_1);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    AsyncStorageDatabase.prototype.get = function (id, storeName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ulid, itemKey, recordAsString, record;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ulid = this.getCollectionIndex(storeName).get(id);\n                        itemKey = this.getKeyForItem(storeName, id, ulid);\n                        return [4 /*yield*/, this.storage.getItem(itemKey)];\n                    case 1:\n                        recordAsString = _a.sent();\n                        record = recordAsString && JSON.parse(recordAsString);\n                        return [2 /*return*/, record];\n                }\n            });\n        });\n    };\n    AsyncStorageDatabase.prototype.getOne = function (firstOrLast, storeName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var collection, _a, itemId, ulid, itemKey, itemString, _b, result;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        collection = this.getCollectionIndex(storeName);\n                        _a = __read(firstOrLast === QueryOne.FIRST\n                            ? (function () {\n                                var e_4, _a, _b;\n                                var id, ulid;\n                                try {\n                                    for (var collection_1 = __values(collection), collection_1_1 = collection_1.next(); !collection_1_1.done; collection_1_1 = collection_1.next()) {\n                                        _b = __read(collection_1_1.value, 2), id = _b[0], ulid = _b[1];\n                                        break;\n                                    } // Get first element of the set\n                                }\n                                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                                finally {\n                                    try {\n                                        if (collection_1_1 && !collection_1_1.done && (_a = collection_1.return)) _a.call(collection_1);\n                                    }\n                                    finally { if (e_4) throw e_4.error; }\n                                }\n                                return [id, ulid];\n                            })()\n                            : (function () {\n                                var e_5, _a, _b;\n                                var id, ulid;\n                                try {\n                                    for (var collection_2 = __values(collection), collection_2_1 = collection_2.next(); !collection_2_1.done; collection_2_1 = collection_2.next()) {\n                                        _b = __read(collection_2_1.value, 2), id = _b[0], ulid = _b[1];\n                                        ;\n                                    } // Get last element of the set\n                                }\n                                catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                                finally {\n                                    try {\n                                        if (collection_2_1 && !collection_2_1.done && (_a = collection_2.return)) _a.call(collection_2);\n                                    }\n                                    finally { if (e_5) throw e_5.error; }\n                                }\n                                return [id, ulid];\n                            })(), 2), itemId = _a[0], ulid = _a[1];\n                        itemKey = this.getKeyForItem(storeName, itemId, ulid);\n                        _b = itemKey;\n                        if (!_b) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storage.getItem(itemKey)];\n                    case 1:\n                        _b = (_c.sent());\n                        _c.label = 2;\n                    case 2:\n                        itemString = _b;\n                        result = itemString ? JSON.parse(itemString) || undefined : undefined;\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * This function gets all the records stored in async storage for a particular storeName\n     * It then loads all the records for that filtered set of keys using multiGet()\n     */\n    AsyncStorageDatabase.prototype.getAll = function (storeName, pagination) {\n        return __awaiter(this, void 0, void 0, function () {\n            var collection, _a, _b, page, _c, limit, start, end, keysForStore, count, collection_3, collection_3_1, _d, id, ulid, storeRecordStrings, records;\n            var e_6, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        collection = this.getCollectionIndex(storeName);\n                        _a = pagination || {}, _b = _a.page, page = _b === void 0 ? 0 : _b, _c = _a.limit, limit = _c === void 0 ? 0 : _c;\n                        start = Math.max(0, page * limit) || 0;\n                        end = limit > 0 ? start + limit : undefined;\n                        keysForStore = [];\n                        count = 0;\n                        try {\n                            for (collection_3 = __values(collection), collection_3_1 = collection_3.next(); !collection_3_1.done; collection_3_1 = collection_3.next()) {\n                                _d = __read(collection_3_1.value, 2), id = _d[0], ulid = _d[1];\n                                count++;\n                                if (count <= start) {\n                                    continue;\n                                }\n                                keysForStore.push(this.getKeyForItem(storeName, id, ulid));\n                                if (count === end) {\n                                    break;\n                                }\n                            }\n                        }\n                        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                        finally {\n                            try {\n                                if (collection_3_1 && !collection_3_1.done && (_e = collection_3.return)) _e.call(collection_3);\n                            }\n                            finally { if (e_6) throw e_6.error; }\n                        }\n                        return [4 /*yield*/, this.storage.multiGet(keysForStore)];\n                    case 1:\n                        storeRecordStrings = _f.sent();\n                        records = storeRecordStrings\n                            .filter(function (_a) {\n                            var _b = __read(_a, 2), value = _b[1];\n                            return value;\n                        })\n                            .map(function (_a) {\n                            var _b = __read(_a, 2), value = _b[1];\n                            return JSON.parse(value);\n                        });\n                        return [2 /*return*/, records];\n                }\n            });\n        });\n    };\n    AsyncStorageDatabase.prototype.delete = function (id, storeName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ulid, itemKey;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ulid = this.getCollectionIndex(storeName).get(id);\n                        itemKey = this.getKeyForItem(storeName, id, ulid);\n                        this.getCollectionIndex(storeName).delete(id);\n                        return [4 /*yield*/, this.storage.removeItem(itemKey)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clear the AsyncStorage of all DataStore entries\n     */\n    AsyncStorageDatabase.prototype.clear = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var allKeys, allDataStoreKeys;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.storage.getAllKeys()];\n                    case 1:\n                        allKeys = _a.sent();\n                        allDataStoreKeys = allKeys.filter(function (key) { return key.startsWith(DB_NAME); });\n                        return [4 /*yield*/, this.storage.multiRemove(allDataStoreKeys)];\n                    case 2:\n                        _a.sent();\n                        this._collectionInMemoryIndex.clear();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AsyncStorageDatabase.prototype.getKeyForItem = function (storeName, id, ulid) {\n        return this.getKeyPrefixForStoreItems(storeName) + \"::\" + ulid + \"::\" + id;\n    };\n    AsyncStorageDatabase.prototype.getLegacyKeyForItem = function (storeName, id) {\n        return this.getKeyPrefixForStoreItems(storeName) + \"::\" + id;\n    };\n    AsyncStorageDatabase.prototype.getKeyPrefixForStoreItems = function (storeName) {\n        return DB_NAME + \"::\" + storeName + \"::\" + DATA;\n    };\n    return AsyncStorageDatabase;\n}());\nexport default AsyncStorageDatabase;\n"]},"metadata":{},"sourceType":"module"}