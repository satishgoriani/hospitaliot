{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Credentials, Parser, StorageHelper, Hub } from '@aws-amplify/core';\nimport { GetObjectCommand, DeleteObjectCommand, ListObjectsCommand, CopyObjectCommand } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from './axios-http-handler';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { createPrefixMiddleware, prefixMiddlewareOptions, getPrefix, autoAdjustClockskewMiddleware, autoAdjustClockskewMiddlewareOptions, createS3Client } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\n\nvar AWSS3Provider =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    var _this = this;\n\n    this._config = config ? config : {};\n    this._storage = new StorageHelper().getStorage();\n    Hub.listen('auth', function (data) {\n      var payload = data.payload;\n\n      if (payload.event === 'signOut' || payload.event === 'signIn') {\n        _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n      }\n    });\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n\n\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n\n    return this._config;\n  };\n\n  AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n    var s3Client = addTaskInput.s3Client,\n        emitter = addTaskInput.emitter,\n        key = addTaskInput.key,\n        file = addTaskInput.file,\n        params = addTaskInput.params;\n    var progressCallback = config.progressCallback,\n        completeCallback = config.completeCallback,\n        errorCallback = config.errorCallback,\n        _a = config.track,\n        track = _a === void 0 ? false : _a;\n\n    if (!(file instanceof Blob)) {\n      throw new Error(StorageErrorStrings.INVALID_BLOB);\n    }\n\n    emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          progressCallback(event);\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n      if (completeCallback) {\n        if (typeof completeCallback === 'function') {\n          completeCallback(event);\n        } else {\n          logger.warn('completeCallback should be a function, not a ' + typeof completeCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.ERROR, function (err) {\n      if (errorCallback) {\n        if (typeof errorCallback === 'function') {\n          errorCallback(err);\n        } else {\n          logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n        }\n      }\n    }); // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n    // when its doing a final check with _listSingleFile function\n\n    var prefixPromise = Credentials.get().then(function (credentials) {\n      var cred = Credentials.shear(credentials);\n      return getPrefix(__assign(__assign({}, config), {\n        credentials: cred\n      }));\n    });\n    var task = new AWSS3UploadTask({\n      s3Client: s3Client,\n      file: file,\n      emitter: emitter,\n      level: config.level,\n      storage: this._storage,\n      params: params,\n      prefixPromise: prefixPromise\n    });\n    dispatchStorageEvent(track, 'upload', {\n      method: 'put',\n      result: 'success'\n    }, null, \"Upload Task created successfully for \" + key); // automatically start the upload task\n\n    task.resume();\n    return task;\n  };\n  /**\n   * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n   * different level or identityId (if source object's level is 'protected').\n   *\n   * @async\n   * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n   * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n   * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n   * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n   */\n\n\n  AWSS3Provider.prototype.copy = function (src, dest, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;\n            _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;\n\n            if (!srcKey || typeof srcKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_SRC_KEY);\n            }\n\n            if (!destKey || typeof destKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_DEST_KEY);\n            }\n\n            if (srcLevel !== 'protected' && srcIdentityId) {\n              logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \" + srcLevel);\n            }\n\n            srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), {\n              level: srcLevel\n            }), srcIdentityId && {\n              identityId: srcIdentityId\n            }));\n            destPrefix = this._prefix(__assign(__assign({}, opt), {\n              level: destLevel\n            }));\n            finalSrcKey = bucket + \"/\" + srcPrefix + srcKey;\n            finalDestKey = \"\" + destPrefix + destKey;\n            logger.debug(\"copying \" + finalSrcKey + \" to \" + finalDestKey);\n            params = {\n              Bucket: bucket,\n              CopySource: finalSrcKey,\n              Key: finalDestKey,\n              // Copies over metadata like contentType as well\n              MetadataDirective: 'COPY'\n            };\n            if (cacheControl) params.CacheControl = cacheControl;\n            if (expires) params.Expires = expires;\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n            }\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (SSEKMSKeyId) {\n              params.SSEKMSKeyId = SSEKMSKeyId;\n            }\n\n            if (acl) params.ACL = acl;\n            s3 = this._createNewS3Client(opt);\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(new CopyObjectCommand(params))];\n\n          case 3:\n            _c.sent();\n\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'success'\n            }, null, \"Copy success from \" + srcKey + \" to \" + destKey);\n            return [2\n            /*return*/\n            , {\n              key: destKey\n            }];\n\n          case 4:\n            error_1 = _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'failed'\n            }, null, \"Copy failed from \" + srcKey + \" to \" + destKey);\n            throw error_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _b.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            emitter = new events.EventEmitter();\n            s3 = this._createNewS3Client(opt, emitter);\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            }; // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (!(download === true)) return [3\n            /*break*/\n            , 5];\n            getObjectCommand = new GetObjectCommand(params);\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 4,, 5]);\n\n            if (progressCallback) {\n              if (typeof progressCallback === 'function') {\n                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                  progressCallback(progress);\n                });\n              } else {\n                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n              }\n            }\n\n            return [4\n            /*yield*/\n            , s3.send(getObjectCommand)];\n\n          case 3:\n            response = _b.sent();\n            emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'success'\n            }, {\n              fileSize: Number(response.Body['size'] || response.Body['length'])\n            }, \"Download success for \" + key);\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_2 = _b.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Download failed with \" + error_2.message);\n            throw error_2;\n\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n\n            signer = new S3RequestPresigner(__assign({}, s3.config));\n            return [4\n            /*yield*/\n            , createRequest(s3, new GetObjectCommand(params))];\n\n          case 6:\n            request = _b.sent();\n            _a = formatUrl;\n            return [4\n            /*yield*/\n            , signer.presign(request, {\n              expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION\n            })];\n\n          case 7:\n            url = _a.apply(void 0, [_b.sent()]);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'success'\n            }, null, \"Signed URL: \" + url);\n            return [2\n            /*return*/\n            , url];\n\n          case 8:\n            error_3 = _b.sent();\n            logger.warn('get signed url error', error_3);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Could not get a signed URL for \" + key);\n            throw error_3;\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param key - key of the object\n   * @param object - File to be put in Amazon S3 bucket\n   * @param [config] - Optional configuration for the underlying S3 command\n   * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n   * success.\n   */\n\n\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    var opt = Object.assign({}, this._config, config);\n    var bucket = opt.bucket,\n        track = opt.track,\n        progressCallback = opt.progressCallback,\n        level = opt.level,\n        resumable = opt.resumable;\n    var contentType = opt.contentType,\n        contentDisposition = opt.contentDisposition,\n        contentEncoding = opt.contentEncoding,\n        cacheControl = opt.cacheControl,\n        expires = opt.expires,\n        metadata = opt.metadata,\n        tagging = opt.tagging,\n        acl = opt.acl;\n    var serverSideEncryption = opt.serverSideEncryption,\n        SSECustomerAlgorithm = opt.SSECustomerAlgorithm,\n        SSECustomerKey = opt.SSECustomerKey,\n        SSECustomerKeyMD5 = opt.SSECustomerKeyMD5,\n        SSEKMSKeyId = opt.SSEKMSKeyId;\n    var type = contentType ? contentType : 'binary/octet-stream';\n    var params = {\n      Bucket: bucket,\n      Key: key,\n      Body: object,\n      ContentType: type\n    };\n\n    if (cacheControl) {\n      params.CacheControl = cacheControl;\n    }\n\n    if (contentDisposition) {\n      params.ContentDisposition = contentDisposition;\n    }\n\n    if (contentEncoding) {\n      params.ContentEncoding = contentEncoding;\n    }\n\n    if (expires) {\n      params.Expires = expires;\n    }\n\n    if (metadata) {\n      params.Metadata = metadata;\n    }\n\n    if (tagging) {\n      params.Tagging = tagging;\n    }\n\n    if (serverSideEncryption) {\n      params.ServerSideEncryption = serverSideEncryption;\n    }\n\n    if (SSECustomerAlgorithm) {\n      params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n    }\n\n    if (SSECustomerKey) {\n      params.SSECustomerKey = SSECustomerKey;\n    }\n\n    if (SSECustomerKeyMD5) {\n      params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n    }\n\n    if (SSEKMSKeyId) {\n      params.SSEKMSKeyId = SSEKMSKeyId;\n    }\n\n    var emitter = new events.EventEmitter();\n    var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n\n    if (acl) {\n      params.ACL = acl;\n    }\n\n    if (resumable === true) {\n      var s3Client = this._createNewS3Client(opt); // we are using aws sdk middleware to inject the prefix to key, this way we don't have to call\n      // this._ensureCredentials() which allows us to make this function sync so we can return non-Promise like UploadTask\n\n\n      s3Client.middlewareStack.add(createPrefixMiddleware(opt, key), prefixMiddlewareOptions);\n      var addTaskInput = {\n        bucket: bucket,\n        key: key,\n        s3Client: s3Client,\n        file: object,\n        emitter: emitter,\n        accessLevel: level,\n        params: params\n      }; // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n\n      return this.startResumableUpload(addTaskInput, config);\n    }\n\n    try {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n            progressCallback(progress);\n          });\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n\n      return uploader.upload().then(function (response) {\n        logger.debug('upload result', response);\n        dispatchStorageEvent(track, 'upload', {\n          method: 'put',\n          result: 'success'\n        }, null, \"Upload success for \" + key);\n        return {\n          key: key\n        };\n      });\n    } catch (error) {\n      logger.warn('error uploading', error);\n      dispatchStorageEvent(track, 'upload', {\n        method: 'put',\n        result: 'failed'\n      }, null, \"Error uploading \" + key);\n      throw error;\n    }\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n   */\n\n\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            deleteObjectCommand = new DeleteObjectCommand(params);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(deleteObjectCommand)];\n\n          case 3:\n            response = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'success'\n            }, null, \"Deleted \" + key + \" successfully\");\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_4 = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'failed'\n            }, null, \"Deletion of \" + key + \" failed with \" + error_4);\n            throw error_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {string} path - the path that contains objects\n   * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n   * all objects in path\n   */\n\n\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params, listObjectsCommand, response, list, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('list ' + path + ' from ' + final_path);\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: maxKeys\n            };\n            listObjectsCommand = new ListObjectsCommand(params);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(listObjectsCommand)];\n\n          case 3:\n            response = _a.sent();\n            list = [];\n\n            if (response && response.Contents) {\n              list = response.Contents.map(function (item) {\n                return {\n                  key: item.Key.substr(prefix.length),\n                  eTag: item.ETag,\n                  lastModified: item.LastModified,\n                  size: item.Size\n                };\n              });\n            }\n\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'success'\n            }, null, list.length + \" items returned from list operation\");\n            logger.debug('list', list);\n            return [2\n            /*return*/\n            , list];\n\n          case 4:\n            error_5 = _a.sent();\n            logger.warn('list error', error_5);\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'failed'\n            }, null, \"Listing items failed: \" + error_5.message);\n            throw error_5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, cred, error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2\n            /*return*/\n            , false];\n            cred = Credentials.shear(credentials);\n            logger.debug('set credentials for storage', cred);\n            this._config.credentials = cred;\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_6 = _a.sent();\n            logger.warn('ensure credentials error', error_6);\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._isWithCredentials = function (config) {\n    return typeof config === 'object' && config.hasOwnProperty('credentials');\n  };\n\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n        level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n    switch (level) {\n      case 'private':\n        return privatePath;\n\n      case 'protected':\n        return protectedPath;\n\n      default:\n        return publicPath;\n    }\n  };\n  /**\n   * Creates an S3 client with new V3 aws sdk\n   */\n\n\n  AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n    var s3client = createS3Client(config, emitter);\n    s3client.middlewareStack.add(autoAdjustClockskewMiddleware(s3client.config), autoAdjustClockskewMiddlewareOptions);\n    return s3client;\n  };\n\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();\n\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\n\nexport default AWSS3Provider;","map":{"version":3,"sources":["c:/work/NodeProjects/hospitaliot/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3Provider.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","ConsoleLogger","Logger","Credentials","Parser","StorageHelper","Hub","GetObjectCommand","DeleteObjectCommand","ListObjectsCommand","CopyObjectCommand","formatUrl","createRequest","S3RequestPresigner","SEND_DOWNLOAD_PROGRESS_EVENT","SEND_UPLOAD_PROGRESS_EVENT","StorageErrorStrings","dispatchStorageEvent","createPrefixMiddleware","prefixMiddlewareOptions","getPrefix","autoAdjustClockskewMiddleware","autoAdjustClockskewMiddlewareOptions","createS3Client","AWSS3ProviderManagedUpload","AWSS3UploadTask","TaskEvents","UPLOADS_STORAGE_KEY","events","logger","DEFAULT_STORAGE_LEVEL","DEFAULT_PRESIGN_EXPIRATION","AWSS3Provider","config","_this","_config","_storage","getStorage","listen","data","payload","event","removeItem","debug","getCategory","CATEGORY","getProviderName","PROVIDER_NAME","configure","amplifyConfig","parseMobilehubConfig","Storage","bucket","startResumableUpload","addTaskInput","s3Client","emitter","key","file","params","progressCallback","completeCallback","errorCallback","_a","track","Blob","Error","INVALID_BLOB","on","UPLOAD_PROGRESS","warn","UPLOAD_COMPLETE","ERROR","err","prefixPromise","get","credentials","cred","shear","task","level","storage","method","resume","copy","src","dest","credentialsOK","opt","acl","cacheControl","expires","serverSideEncryption","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","srcLevel","srcIdentityId","srcKey","_b","destLevel","destKey","srcPrefix","destPrefix","finalSrcKey","finalDestKey","s3","error_1","_c","_ensureCredentials","_isWithCredentials","NO_CREDENTIALS","identityId","NO_SRC_KEY","NO_DEST_KEY","_prefix","Bucket","CopySource","Key","MetadataDirective","CacheControl","Expires","ServerSideEncryption","ACL","_createNewS3Client","send","download","contentDisposition","contentEncoding","contentLanguage","contentType","prefix","final_key","getObjectCommand","response","error_2","signer","request","url","error_3","EventEmitter","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","progress","removeAllListeners","fileSize","Number","Body","message","presign","expiresIn","put","object","resumable","metadata","tagging","type","ContentType","ContentDisposition","ContentEncoding","Metadata","Tagging","uploader","middlewareStack","add","accessLevel","upload","error","remove","deleteObjectCommand","error_4","list","path","maxKeys","final_path","listObjectsCommand","error_5","Prefix","MaxKeys","Contents","map","item","substr","eTag","ETag","lastModified","LastModified","size","Size","error_6","customPrefix","privatePath","private","undefined","protectedPath","protected","publicPath","public","s3client"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Credentials, Parser, StorageHelper, Hub, } from '@aws-amplify/core';\nimport { GetObjectCommand, DeleteObjectCommand, ListObjectsCommand, CopyObjectCommand, } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT, } from './axios-http-handler';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { createPrefixMiddleware, prefixMiddlewareOptions, getPrefix, autoAdjustClockskewMiddleware, autoAdjustClockskewMiddlewareOptions, createS3Client, } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\nvar AWSS3Provider = /** @class */ (function () {\n    /**\n     * Initialize Storage with AWS configurations\n     * @param {Object} config - Configuration object for storage\n     */\n    function AWSS3Provider(config) {\n        var _this = this;\n        this._config = config ? config : {};\n        this._storage = new StorageHelper().getStorage();\n        Hub.listen('auth', function (data) {\n            var payload = data.payload;\n            if (payload.event === 'signOut' || payload.event === 'signIn') {\n                _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n            }\n        });\n        logger.debug('Storage Options', this._config);\n    }\n    /**\n     * get the category of the plugin\n     */\n    AWSS3Provider.prototype.getCategory = function () {\n        return AWSS3Provider.CATEGORY;\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSS3Provider.prototype.getProviderName = function () {\n        return AWSS3Provider.PROVIDER_NAME;\n    };\n    /**\n     * Configure Storage part with aws configuration\n     * @param {Object} config - Configuration of the Storage\n     * @return {Object} - Current configuration\n     */\n    AWSS3Provider.prototype.configure = function (config) {\n        logger.debug('configure Storage', config);\n        if (!config)\n            return this._config;\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n        if (!this._config.bucket) {\n            logger.debug('Do not have bucket yet');\n        }\n        return this._config;\n    };\n    AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n        var s3Client = addTaskInput.s3Client, emitter = addTaskInput.emitter, key = addTaskInput.key, file = addTaskInput.file, params = addTaskInput.params;\n        var progressCallback = config.progressCallback, completeCallback = config.completeCallback, errorCallback = config.errorCallback, _a = config.track, track = _a === void 0 ? false : _a;\n        if (!(file instanceof Blob)) {\n            throw new Error(StorageErrorStrings.INVALID_BLOB);\n        }\n        emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    progressCallback(event);\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n            if (completeCallback) {\n                if (typeof completeCallback === 'function') {\n                    completeCallback(event);\n                }\n                else {\n                    logger.warn('completeCallback should be a function, not a ' +\n                        typeof completeCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.ERROR, function (err) {\n            if (errorCallback) {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                else {\n                    logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n                }\n            }\n        });\n        // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n        // when its doing a final check with _listSingleFile function\n        var prefixPromise = Credentials.get().then(function (credentials) {\n            var cred = Credentials.shear(credentials);\n            return getPrefix(__assign(__assign({}, config), { credentials: cred }));\n        });\n        var task = new AWSS3UploadTask({\n            s3Client: s3Client,\n            file: file,\n            emitter: emitter,\n            level: config.level,\n            storage: this._storage,\n            params: params,\n            prefixPromise: prefixPromise,\n        });\n        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload Task created successfully for \" + key);\n        // automatically start the upload task\n        task.resume();\n        return task;\n    };\n    /**\n     * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n     * different level or identityId (if source object's level is 'protected').\n     *\n     * @async\n     * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n     * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n     * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n     * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n     */\n    AWSS3Provider.prototype.copy = function (src, dest, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n                        _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;\n                        _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;\n                        if (!srcKey || typeof srcKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_SRC_KEY);\n                        }\n                        if (!destKey || typeof destKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_DEST_KEY);\n                        }\n                        if (srcLevel !== 'protected' && srcIdentityId) {\n                            logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \" + srcLevel);\n                        }\n                        srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), { level: srcLevel }), (srcIdentityId && { identityId: srcIdentityId })));\n                        destPrefix = this._prefix(__assign(__assign({}, opt), { level: destLevel }));\n                        finalSrcKey = bucket + \"/\" + srcPrefix + srcKey;\n                        finalDestKey = \"\" + destPrefix + destKey;\n                        logger.debug(\"copying \" + finalSrcKey + \" to \" + finalDestKey);\n                        params = {\n                            Bucket: bucket,\n                            CopySource: finalSrcKey,\n                            Key: finalDestKey,\n                            // Copies over metadata like contentType as well\n                            MetadataDirective: 'COPY',\n                        };\n                        if (cacheControl)\n                            params.CacheControl = cacheControl;\n                        if (expires)\n                            params.Expires = expires;\n                        if (serverSideEncryption) {\n                            params.ServerSideEncryption = serverSideEncryption;\n                        }\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (SSEKMSKeyId) {\n                            params.SSEKMSKeyId = SSEKMSKeyId;\n                        }\n                        if (acl)\n                            params.ACL = acl;\n                        s3 = this._createNewS3Client(opt);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(new CopyObjectCommand(params))];\n                    case 3:\n                        _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'success',\n                        }, null, \"Copy success from \" + srcKey + \" to \" + destKey);\n                        return [2 /*return*/, {\n                                key: destKey,\n                            }];\n                    case 4:\n                        error_1 = _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'failed',\n                        }, null, \"Copy failed from \" + srcKey + \" to \" + destKey);\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype.get = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _b.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        emitter = new events.EventEmitter();\n                        s3 = this._createNewS3Client(opt, emitter);\n                        logger.debug('get ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n                        if (cacheControl)\n                            params.ResponseCacheControl = cacheControl;\n                        if (contentDisposition)\n                            params.ResponseContentDisposition = contentDisposition;\n                        if (contentEncoding)\n                            params.ResponseContentEncoding = contentEncoding;\n                        if (contentLanguage)\n                            params.ResponseContentLanguage = contentLanguage;\n                        if (contentType)\n                            params.ResponseContentType = contentType;\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (!(download === true)) return [3 /*break*/, 5];\n                        getObjectCommand = new GetObjectCommand(params);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 5]);\n                        if (progressCallback) {\n                            if (typeof progressCallback === 'function') {\n                                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                                    progressCallback(progress);\n                                });\n                            }\n                            else {\n                                logger.warn('progressCallback should be a function, not a ' +\n                                    typeof progressCallback);\n                            }\n                        }\n                        return [4 /*yield*/, s3.send(getObjectCommand)];\n                    case 3:\n                        response = _b.sent();\n                        emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n                        dispatchStorageEvent(track, 'download', { method: 'get', result: 'success' }, {\n                            fileSize: Number(response.Body['size'] || response.Body['length']),\n                        }, \"Download success for \" + key);\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_2 = _b.sent();\n                        dispatchStorageEvent(track, 'download', {\n                            method: 'get',\n                            result: 'failed',\n                        }, null, \"Download failed with \" + error_2.message);\n                        throw error_2;\n                    case 5:\n                        _b.trys.push([5, 8, , 9]);\n                        signer = new S3RequestPresigner(__assign({}, s3.config));\n                        return [4 /*yield*/, createRequest(s3, new GetObjectCommand(params))];\n                    case 6:\n                        request = _b.sent();\n                        _a = formatUrl;\n                        return [4 /*yield*/, signer.presign(request, {\n                                expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION,\n                            })];\n                    case 7:\n                        url = _a.apply(void 0, [_b.sent()]);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'success' }, null, \"Signed URL: \" + url);\n                        return [2 /*return*/, url];\n                    case 8:\n                        error_3 = _b.sent();\n                        logger.warn('get signed url error', error_3);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'failed' }, null, \"Could not get a signed URL for \" + key);\n                        throw error_3;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Put a file in S3 bucket specified to configure method\n     * @param key - key of the object\n     * @param object - File to be put in Amazon S3 bucket\n     * @param [config] - Optional configuration for the underlying S3 command\n     * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n     * success.\n     */\n    AWSS3Provider.prototype.put = function (key, object, config) {\n        var opt = Object.assign({}, this._config, config);\n        var bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback, level = opt.level, resumable = opt.resumable;\n        var contentType = opt.contentType, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;\n        var serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n        var type = contentType ? contentType : 'binary/octet-stream';\n        var params = {\n            Bucket: bucket,\n            Key: key,\n            Body: object,\n            ContentType: type,\n        };\n        if (cacheControl) {\n            params.CacheControl = cacheControl;\n        }\n        if (contentDisposition) {\n            params.ContentDisposition = contentDisposition;\n        }\n        if (contentEncoding) {\n            params.ContentEncoding = contentEncoding;\n        }\n        if (expires) {\n            params.Expires = expires;\n        }\n        if (metadata) {\n            params.Metadata = metadata;\n        }\n        if (tagging) {\n            params.Tagging = tagging;\n        }\n        if (serverSideEncryption) {\n            params.ServerSideEncryption = serverSideEncryption;\n        }\n        if (SSECustomerAlgorithm) {\n            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n        }\n        if (SSECustomerKey) {\n            params.SSECustomerKey = SSECustomerKey;\n        }\n        if (SSECustomerKeyMD5) {\n            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n        }\n        if (SSEKMSKeyId) {\n            params.SSEKMSKeyId = SSEKMSKeyId;\n        }\n        var emitter = new events.EventEmitter();\n        var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n        if (acl) {\n            params.ACL = acl;\n        }\n        if (resumable === true) {\n            var s3Client = this._createNewS3Client(opt);\n            // we are using aws sdk middleware to inject the prefix to key, this way we don't have to call\n            // this._ensureCredentials() which allows us to make this function sync so we can return non-Promise like UploadTask\n            s3Client.middlewareStack.add(createPrefixMiddleware(opt, key), prefixMiddlewareOptions);\n            var addTaskInput = {\n                bucket: bucket,\n                key: key,\n                s3Client: s3Client,\n                file: object,\n                emitter: emitter,\n                accessLevel: level,\n                params: params,\n            };\n            // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n            return this.startResumableUpload(addTaskInput, config);\n        }\n        try {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n                        progressCallback(progress);\n                    });\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n            return uploader.upload().then(function (response) {\n                logger.debug('upload result', response);\n                dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload success for \" + key);\n                return { key: key };\n            });\n        }\n        catch (error) {\n            logger.warn('error uploading', error);\n            dispatchStorageEvent(track, 'upload', { method: 'put', result: 'failed' }, null, \"Error uploading \" + key);\n            throw error;\n        }\n    };\n    /**\n     * Remove the object for specified key\n     * @param {string} key - key of the object\n     * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n     */\n    AWSS3Provider.prototype.remove = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        s3 = this._createNewS3Client(opt);\n                        logger.debug('remove ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        deleteObjectCommand = new DeleteObjectCommand(params);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(deleteObjectCommand)];\n                    case 3:\n                        response = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'success' }, null, \"Deleted \" + key + \" successfully\");\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_4 = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'failed' }, null, \"Deletion of \" + key + \" failed with \" + error_4);\n                        throw error_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * List bucket objects relative to the level and prefix specified\n     * @param {string} path - the path that contains objects\n     * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n     * all objects in path\n     */\n    AWSS3Provider.prototype.list = function (path, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params, listObjectsCommand, response, list, error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n                        prefix = this._prefix(opt);\n                        final_path = prefix + path;\n                        s3 = this._createNewS3Client(opt);\n                        logger.debug('list ' + path + ' from ' + final_path);\n                        params = {\n                            Bucket: bucket,\n                            Prefix: final_path,\n                            MaxKeys: maxKeys,\n                        };\n                        listObjectsCommand = new ListObjectsCommand(params);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(listObjectsCommand)];\n                    case 3:\n                        response = _a.sent();\n                        list = [];\n                        if (response && response.Contents) {\n                            list = response.Contents.map(function (item) {\n                                return {\n                                    key: item.Key.substr(prefix.length),\n                                    eTag: item.ETag,\n                                    lastModified: item.LastModified,\n                                    size: item.Size,\n                                };\n                            });\n                        }\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'success' }, null, list.length + \" items returned from list operation\");\n                        logger.debug('list', list);\n                        return [2 /*return*/, list];\n                    case 4:\n                        error_5 = _a.sent();\n                        logger.warn('list error', error_5);\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'failed' }, null, \"Listing items failed: \" + error_5.message);\n                        throw error_5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._ensureCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials, cred, error_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, false];\n                        cred = Credentials.shear(credentials);\n                        logger.debug('set credentials for storage', cred);\n                        this._config.credentials = cred;\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_6 = _a.sent();\n                        logger.warn('ensure credentials error', error_6);\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._isWithCredentials = function (config) {\n        return typeof config === 'object' && config.hasOwnProperty('credentials');\n    };\n    AWSS3Provider.prototype._prefix = function (config) {\n        var credentials = config.credentials, level = config.level;\n        var customPrefix = config.customPrefix || {};\n        var identityId = config.identityId || credentials.identityId;\n        var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') +\n            identityId +\n            '/';\n        var protectedPath = (customPrefix.protected !== undefined\n            ? customPrefix.protected\n            : 'protected/') +\n            identityId +\n            '/';\n        var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n        switch (level) {\n            case 'private':\n                return privatePath;\n            case 'protected':\n                return protectedPath;\n            default:\n                return publicPath;\n        }\n    };\n    /**\n     * Creates an S3 client with new V3 aws sdk\n     */\n    AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n        var s3client = createS3Client(config, emitter);\n        s3client.middlewareStack.add(autoAdjustClockskewMiddleware(s3client.config), autoAdjustClockskewMiddlewareOptions);\n        return s3client;\n    };\n    AWSS3Provider.CATEGORY = 'Storage';\n    AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n    return AWSS3Provider;\n}());\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\nexport default AWSS3Provider;\n"]},"metadata":{},"sourceType":"module"}